{"version":3,"sources":["main.js"],"names":["recNumLoc","document","querySelector","noResultsLoc","resultsLoc","pagesSwitchLoc","pageButtonsLoc","querySelectorAll","dropDownFilterLoc","dropDownLoc","dropDownBtnLoc","moreFiltersLoc","lessFiltersLoc","recordsOnPageLoc","branchesLoc","jobFormLoc","jobTypeLoc","langLoc","countriesLoc","citiesLoc","locationMarkLoc","locationDotLoc","locationSliderLoc","locationValuesLoc","displayValDistance","getElementById","salaryMarkLoc","salarySliderLoc","salaryValuesLoc","sliderOne","sliderTwo","displayValOne","displayValTwo","sliderTrack","pauseLoc","remoteLoc","relocationLoc","searchInputLoc","searchBtn","apiPage","rawAPIArray","allRecordsArray","filterBranchesList","filterJobFormList","filterJobTypeList","filterLangList","filterMinSalary","filterMaxSalary","filterCountriesList","recordsNumber","firstRecordNumber","recordsOnPage","filterListMaxHeight","filtersON","filteredRecordsArray_10","value","checked","disabled","createDataForFilters","branche","jobForm","jobType","lang","visibleRate","salaryFrom","salaryTo","country","city","lati","longi","indexOf","push","forEach","elem","findIndex","arr_el","reworkData","el","options","job_location","parsedJobLocation","JSON","parse","url","name","advert","branches","language","job_type","parseInt","_Widoczna_stawka","_spodziewane_wynagrodzenie_od","_spodziewane_wynagrodzenie_do","remote","relocation","_relokacja","recruitmentType","_rekrutacja_rodzaj","_forma_zatrudnienia","locality","parseFloat","latitude","longitude","description","values","summariseDownload","innerText","classList","remove","add","createRecordBoxes","recordsArray","replaceChildren","i","borderColorClass","textColorClass","formaZatrudnienia","insertAdjacentHTML","getAPI","fetch","mode","headers","loopOnAPI","jsonData","length","concat","createRecordsObjFromAPI","setPages","createFilterLists","async","rawData","json","sort","a","b","localeCompare","rowHeight","style","height","String","Object","keys","compare","key","reduce","accumulator","allCitiesObj","allCitiesArray","min","toString","max","slideOne","slideTwo","createFilteredRecordsArray","branchesChildrenLoc","jobFormChildrenLoc","jobTypeChildrenLoc","langChildrenLoc","countriesChildrenLoc","citiesChildrenLoc","filteredRecordsArray","console","log","selectedBranches","Array","from","filter","selected","map","filteredRecordsArray_1","index","addFlag","selectedFiltr","selectedJobForms","filteredRecordsArray_2","selectedjobTypes","filteredRecordsArray_3","selectedLangs","selectedValOne","selectedValTwo","filteredRecordsArray_4","filteredRecordsArray_5","selectedCountry","filteredRecordsArray_6","selectedCity","filteredRecordsArray_7","min_lati","max_lati","min_longi","max_longi","selectedDistance","Math","cos","PI","filteredRecordsArray_8","filteredRecordsArray_9","searchText","position","field_id","toLowerCase","search","slideDistance","textContent","addEventListener","e","target","activateCities","sel_el","find","minGap","zIndex","fillColor","percent1","percent2","background","changePage","pageBtn","firstRecord","lastRecord","pagesQuantity","ceil","n","dataset","toggle","contains","maxHeight"],"mappings":"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","file":"all.min.js","sourcesContent":["const recNumLoc = document.querySelector(\".records-number\");\r\nconst noResultsLoc = document.querySelector(\".no-results\");\r\nconst resultsLoc = document.querySelector(\".results\");\r\nconst pagesSwitchLoc = document.querySelector(\".pages-container\");\r\nlet pageButtonsLoc = document.querySelectorAll(\".page\");\r\n\r\nconst dropDownFilterLoc = document.querySelector(\".drop-down-filters\");\r\nconst dropDownLoc = document.querySelector(\".drop-down-btn\");\r\nconst dropDownBtnLoc = document.querySelector(\".drop-down-btn img\");\r\nconst moreFiltersLoc = document.querySelector(\".more-filters\");\r\nconst lessFiltersLoc = document.querySelector(\".less-filters\");\r\n\r\nconst recordsOnPageLoc = document.querySelectorAll(\".recordsOnPage span\");\r\n\r\nconst branchesLoc = document.querySelector(\".branches\");\r\nconst jobFormLoc = document.querySelector(\".job-form\");\r\nconst jobTypeLoc = document.querySelector(\".job-type\");\r\nconst langLoc = document.querySelector(\".lang\");\r\nconst countriesLoc = document.querySelector(\".countries\");\r\nconst citiesLoc = document.querySelector(\".cities\");\r\n\r\nconst locationMarkLoc = document.querySelector(\"#localization\");\r\nconst locationDotLoc = document.querySelector(\"#loc-slider\");\r\nconst locationSliderLoc = document.querySelector(\r\n    \".distance-slider .slider-container .container\"\r\n);\r\nconst locationValuesLoc = document.querySelector(\r\n    \".distance-slider .slider-values\"\r\n);\r\nconst displayValDistance = document.getElementById(\"range3\");\r\n\r\nconst salaryMarkLoc = document.querySelector(\"#salary-mark\");\r\nconst salarySliderLoc = document.querySelector(\r\n    \".salary .slider-container .container\"\r\n);\r\nconst salaryValuesLoc = document.querySelector(\".salary .slider-values\");\r\nconst sliderOne = document.querySelector(\"#slider-1\");\r\nconst sliderTwo = document.querySelector(\"#slider-2\");\r\nconst displayValOne = document.getElementById(\"range1\");\r\nconst displayValTwo = document.getElementById(\"range2\");\r\nconst sliderTrack = document.querySelector(\".salary .slider-track\");\r\nconst pauseLoc = document.querySelector(\".salary .pause\");\r\n\r\nconst remoteLoc = document.querySelector(\"#remote\");\r\nconst relocationLoc = document.querySelector(\"#relocation\");\r\n\r\nconst searchInputLoc = document.querySelector(\".search-input input\");\r\n\r\nconst searchBtn = document.querySelector(\".search-btn\");\r\n\r\nlet apiPage = 1;\r\nlet rawAPIArray = [];\r\nlet allRecordsArray = [];\r\n\r\nlet filterBranchesList = [];\r\nlet filterJobFormList = [];\r\nlet filterJobTypeList = [];\r\nlet filterLangList = [];\r\nlet filterMinSalary = 100000;\r\nlet filterMaxSalary = 0;\r\nlet filterCountriesList = {};\r\n\r\nlet recordsNumber = 0;\r\nlet firstRecordNumber = 0;\r\nlet recordsOnPage = 20;\r\n\r\nlet filterListMaxHeight = 0;\r\n\r\nlet filtersON = false;\r\nlet filteredRecordsArray_10 = [];\r\n\r\nsearchInputLoc.value = \"\";\r\n\r\nlocationMarkLoc.checked = false;\r\nlocationDotLoc.disabled = true;\r\ncountriesLoc.disabled = true;\r\ncitiesLoc.disabled = true;\r\nlocationDotLoc.value = 0;\r\n\r\nsalaryMarkLoc.checked = false;\r\nsliderOne.disabled = true;\r\nsliderTwo.disabled = true;\r\n\r\nremoteLoc.checked = false;\r\nrelocationLoc.checked = false;\r\n\r\n// create FILTER DATA from API data ///////////////////////////////////////////////\r\nconst createDataForFilters = (\r\n    branche,\r\n    jobForm,\r\n    jobType,\r\n    lang,\r\n    visibleRate,\r\n    salaryFrom,\r\n    salaryTo,\r\n    country,\r\n    city,\r\n    lati,\r\n    longi\r\n) => {\r\n    if (filterBranchesList.indexOf(branche) === -1) {\r\n        filterBranchesList.push(branche);\r\n    }\r\n    if (jobForm) {\r\n        jobForm.forEach(function (elem) {\r\n            if (filterJobFormList.indexOf(elem) === -1) {\r\n                filterJobFormList.push(elem);\r\n            }\r\n        });\r\n    }\r\n    if (filterJobTypeList.indexOf(jobType) === -1) {\r\n        filterJobTypeList.push(jobType);\r\n    }\r\n    if (filterLangList.indexOf(lang) === -1) {\r\n        filterLangList.push(lang);\r\n    }\r\n    if (visibleRate) {\r\n        if (salaryFrom < filterMinSalary) {\r\n            filterMinSalary = salaryFrom;\r\n        }\r\n        if (salaryTo > filterMaxSalary) {\r\n            filterMaxSalary = salaryTo;\r\n        }\r\n    }\r\n    if (filterCountriesList[country]) {\r\n        if (\r\n            filterCountriesList[country].findIndex(\r\n                (arr_el) => arr_el.city === city\r\n            ) === -1\r\n        ) {\r\n            filterCountriesList[country].push({\r\n                city: city,\r\n                lati: lati,\r\n                longi: longi,\r\n            });\r\n        }\r\n    } else {\r\n        filterCountriesList[country] = [];\r\n        filterCountriesList[country].push({\r\n            city: city,\r\n            lati: lati,\r\n            longi: longi,\r\n        });\r\n    }\r\n};\r\n\r\n// create OBJECTS ARRAY from Raw API JSON ///////////////////////////////////////////////\r\nconst reworkData = (rawAPIArray) => {\r\n    rawAPIArray.forEach((el) => {\r\n        if (el.options.job_location) {\r\n            parsedJobLocation = JSON.parse(el.options.job_location);\r\n        }\r\n\r\n        allRecordsArray.push({\r\n            url: el.url,\r\n            name: el.advert.name,\r\n            branche: el.options.branches,\r\n            lang: el.advert.language,\r\n            jobType: el.options.job_type,\r\n            visibleRate: parseInt(el.options._Widoczna_stawka),\r\n            salaryFrom: parseInt(el.options._spodziewane_wynagrodzenie_od),\r\n            salaryTo: parseInt(el.options._spodziewane_wynagrodzenie_do),\r\n            remote: el.options.remote,\r\n            relocation: el.options._relokacja,\r\n            recruitmentType: el.options._rekrutacja_rodzaj,\r\n            jobForm: el.options._forma_zatrudnienia,\r\n            country: parsedJobLocation.country,\r\n            city: parsedJobLocation.locality,\r\n            lati: parseFloat(parsedJobLocation.latitude),\r\n            longi: parseFloat(parsedJobLocation.longitude),\r\n            description: el.advert.values,\r\n        });\r\n\r\n        createDataForFilters(\r\n            el.options.branches,\r\n            el.options._forma_zatrudnienia,\r\n            el.options.job_type,\r\n            el.advert.language,\r\n            parseInt(el.options._Widoczna_stawka),\r\n            parseInt(el.options._spodziewane_wynagrodzenie_od),\r\n            parseInt(el.options._spodziewane_wynagrodzenie_do),\r\n            parsedJobLocation.country,\r\n            parsedJobLocation.locality,\r\n            parseFloat(parsedJobLocation.latitude),\r\n            parseFloat(parsedJobLocation.longitude)\r\n        );\r\n    });\r\n};\r\n\r\n// show RECORDS NUMBER ///////////////////////////////////////////////\r\n\r\nconst summariseDownload = (recordsNumber) => {\r\n    recNumLoc.innerText = `Znaleziono ${recordsNumber} ogłoszeń`;\r\n    if (!recordsNumber) {\r\n        noResultsLoc.classList.add(\"active\");\r\n    } else {\r\n        noResultsLoc.classList.remove(\"active\");\r\n    }\r\n};\r\n\r\n// create RECORDS BOXES ///////////////////////////////////////////////\r\n\r\nconst createRecordBoxes = (recordsArray, firstRecordNumber, recordsOnPage) => {\r\n    resultsLoc.replaceChildren();\r\n\r\n    for (i = firstRecordNumber; i < recordsOnPage; i++) {\r\n        // colouring of records by type of recruitment\r\n\r\n        if (recordsArray[i]) {\r\n            let borderColorClass = \"\";\r\n            let textColorClass = \"\";\r\n\r\n            if (recordsArray[i].recruitmentType === \"PT\") {\r\n                borderColorClass = \"pt-border\";\r\n                textColorClass = \"pt-text\";\r\n            }\r\n            if (recordsArray[i].recruitmentType === \"RS\") {\r\n                borderColorClass = \"rs-border\";\r\n                textColorClass = \"rs-text\";\r\n            }\r\n            if (recordsArray[i].recruitmentType === \"WEW\") {\r\n                borderColorClass = \"wew-border\";\r\n                textColorClass = \"wew-text\";\r\n            }\r\n\r\n            let formaZatrudnienia = \"\";\r\n\r\n            if (recordsArray[i].jobForm) {\r\n                recordsArray[i].jobForm.forEach(function (elem) {\r\n                    formaZatrudnienia =\r\n                        formaZatrudnienia + \"<p>\" + elem + \"</p>\";\r\n                });\r\n            }\r\n\r\n            resultsLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<a href=\"${\r\n                    recordsArray[i].url\r\n                }\" target=\"_blank\"><div class=\"result ${borderColorClass}\">\r\n            <div class=\"top\">\r\n                <div class=\"top-left\">\r\n                    <div class=\"lang\"><p>${recordsArray[i].lang}</p></div>\r\n                    <div class=\"branche-name\">\r\n                        <div class=\"branche\">${\r\n                            recordsArray[i].branche\r\n                                ? recordsArray[i].branche\r\n                                : \"\"\r\n                        }</div>\r\n                        <div class=\"name ${textColorClass}\">${\r\n                    recordsArray[i].name\r\n                }</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"top-right\">\r\n                    ${\r\n                        recordsArray[i].jobType\r\n                            ? \"<div class='jobtype'>\" +\r\n                              recordsArray[i].jobType +\r\n                              \"</div>\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        recordsArray[i].visibleRate\r\n                            ? recordsArray[i].salaryFrom &&\r\n                              recordsArray[i].salaryTo\r\n                                ? \"<div class='salary'>\" +\r\n                                  recordsArray[i].salaryFrom +\r\n                                  \" - \" +\r\n                                  recordsArray[i].salaryTo +\r\n                                  \"</div>\"\r\n                                : \"\"\r\n                            : \"\"\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"bottom\">\r\n                <div class=\"bottom-left\">\r\n                    <div class=\"city\"><img src=\"./img/location_dot.svg\">${\r\n                        recordsArray[i].city\r\n                    }</div>\r\n                    ${\r\n                        recordsArray[i].remote\r\n                            ? \"<div class='remote'>zdalna</div>\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        recordsArray[i].relocation\r\n                            ? \"<div class='relocation'>relocation</div>\"\r\n                            : \"\"\r\n                    }\r\n                </div>\r\n                    <div class=\"bottom-right\">\r\n                        <div class=\"employmentform\">${formaZatrudnienia}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div></a>`\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\n// gets DATA FROM API ///////////////////////////////////////////////\r\n\r\nconst getAPI = (apiPage) => {\r\n    const response = fetch(\r\n        \"https://grupaprogres.traffit.com/public/job_posts/published\",\r\n        {\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-Request-Page-Size\": \"100\",\r\n                \"X-Request-Current-Page\": apiPage,\r\n                \"X-Request-Sort\": '{\"sort_by\": \"id\", \"direction\": \"ASC\"}',\r\n            },\r\n        }\r\n    );\r\n\r\n    return response;\r\n};\r\n\r\nconst loopOnAPI = (jsonData) => {\r\n    if (jsonData.length > 0) {\r\n        rawAPIArray = rawAPIArray.concat(jsonData);\r\n        apiPage++;\r\n        createRecordsObjFromAPI(apiPage);\r\n    } else {\r\n        reworkData(rawAPIArray);\r\n        recordsNumber = rawAPIArray.length;\r\n        summariseDownload(recordsNumber);\r\n        createRecordBoxes(allRecordsArray, firstRecordNumber, recordsOnPage);\r\n        setPages(recordsNumber);\r\n        createFilterLists();\r\n    }\r\n};\r\n\r\nasync function createRecordsObjFromAPI(apiPage) {\r\n    const rawData = await getAPI(apiPage);\r\n    const jsonData = await rawData.json();\r\n    loopOnAPI(jsonData);\r\n}\r\n\r\ncreateRecordsObjFromAPI(apiPage);\r\n\r\n// create HTML FILTERS LISTS //////////////////////////////////////////////////////\r\n\r\nconst createFilterLists = () => {\r\n    if (filterBranchesList.length > 0) {\r\n        filterBranchesList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterBranchesList.length * 21 + 3;\r\n        filterListMaxHeight = rowHeight;\r\n        branchesLoc.style.height = String(rowHeight) + \"px\";\r\n        filterBranchesList.forEach(function (el) {\r\n            branchesLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${el}\">${el}</option>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (filterJobFormList.length > 0) {\r\n        filterJobFormList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterJobFormList.length * 21 + 3;\r\n        jobFormLoc.style.height = String(rowHeight) + \"px\";\r\n        filterJobFormList.forEach(function (el) {\r\n            jobFormLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${el}\">${el}</option>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (filterJobTypeList.length > 0) {\r\n        filterJobTypeList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterJobTypeList.length * 21 + 3;\r\n        jobTypeLoc.style.height = String(rowHeight) + \"px\";\r\n        filterJobTypeList.forEach(function (el) {\r\n            jobTypeLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${el}\">${el}</option>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (filterLangList.length > 0) {\r\n        filterLangList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterLangList.length * 21 + 3;\r\n        langLoc.style.height = String(rowHeight) + \"px\";\r\n        filterLangList.forEach(function (el) {\r\n            langLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${el}\">${el}</option>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (Object.keys(filterCountriesList).length > 0) {\r\n        countriesLoc.insertAdjacentHTML(\r\n            \"beforeend\",\r\n            `<option value=\"\" class=\"placeholder\">Państwo</option>`\r\n        );\r\n\r\n        citiesLoc.insertAdjacentHTML(\r\n            \"beforeend\",\r\n            `<option value=\"\" class=\"placeholder\">Miasto</option>`\r\n        );\r\n\r\n        function compare(a, b) {\r\n            return a.city.localeCompare(b.city);\r\n        }\r\n\r\n        for (let key in filterCountriesList) {\r\n            filterCountriesList[key].sort(compare);\r\n        }\r\n\r\n        filterCountriesList = Object.keys(filterCountriesList)\r\n            .sort()\r\n            .reduce((accumulator, key) => {\r\n                accumulator[key] = filterCountriesList[key];\r\n                return accumulator;\r\n            }, {});\r\n\r\n        let allCitiesObj = [];\r\n        for (let key in filterCountriesList) {\r\n            countriesLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${key}\">${key}</option>`\r\n            );\r\n            allCitiesObj = allCitiesObj.concat(filterCountriesList[key]);\r\n        }\r\n\r\n        let allCitiesArray = [];\r\n        allCitiesObj.forEach((el) => {\r\n            allCitiesArray.push(el.city);\r\n        });\r\n\r\n        allCitiesArray.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n\r\n        allCitiesArray.forEach(function (el) {\r\n            citiesLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${el}\" class=\"active\">${el} </option>`\r\n            );\r\n        });\r\n    }\r\n\r\n    sliderOne.min = filterMinSalary.toString();\r\n    sliderTwo.min = filterMinSalary.toString();\r\n    sliderOne.max = filterMaxSalary.toString();\r\n    sliderTwo.max = filterMaxSalary.toString();\r\n    sliderOne.value = filterMinSalary.toString();\r\n    sliderTwo.value = filterMaxSalary.toString();\r\n    slideOne();\r\n    slideTwo();\r\n};\r\n\r\n// filter the data to create FILTERED OBJECTS ARRAY ///////////////////////////////\r\n\r\nconst createFilteredRecordsArray = () => {\r\n    const branchesChildrenLoc = document.querySelectorAll(\".branches option\");\r\n    const jobFormChildrenLoc = document.querySelectorAll(\".job-form option\");\r\n    const jobTypeChildrenLoc = document.querySelectorAll(\".job-type option\");\r\n    const langChildrenLoc = document.querySelectorAll(\".lang option\");\r\n    const countriesChildrenLoc = document.querySelectorAll(\".countries option\");\r\n    const citiesChildrenLoc = document.querySelectorAll(\".cities option\");\r\n\r\n    let filteredRecordsArray = allRecordsArray;\r\n\r\n    console.log(allRecordsArray);\r\n\r\n    // selectedBranches ////////////////\r\n\r\n    let selectedBranches = Array.from(branchesChildrenLoc)\r\n        .filter(function (elem) {\r\n            return elem.selected;\r\n        })\r\n        .map(function (elem) {\r\n            return elem.value;\r\n        });\r\n\r\n    console.log(selectedBranches);\r\n\r\n    let filteredRecordsArray_1 = [];\r\n\r\n    if (selectedBranches.length !== 0) {\r\n        filteredRecordsArray.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedBranches.forEach((selectedFiltr) => {\r\n                if (el.branche === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                console.log(index);\r\n                filteredRecordsArray_1.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_1 = filteredRecordsArray;\r\n    }\r\n\r\n    console.log(filteredRecordsArray_1);\r\n\r\n    // selectedJobForms ////////////////\r\n\r\n    let selectedJobForms = Array.from(jobFormChildrenLoc)\r\n        .filter(function (elem) {\r\n            return elem.selected;\r\n        })\r\n        .map(function (elem) {\r\n            return elem.value;\r\n        });\r\n\r\n    console.log(selectedJobForms);\r\n\r\n    let filteredRecordsArray_2 = [];\r\n\r\n    if (selectedJobForms.length !== 0) {\r\n        filteredRecordsArray_1.forEach((el, index) => {\r\n            if (el.jobForm) {\r\n                let addFlag = false;\r\n\r\n                selectedJobForms.forEach((selectedFiltr) => {\r\n                    if (el.jobForm.indexOf(selectedFiltr) !== -1) {\r\n                        addFlag = true;\r\n                    }\r\n                });\r\n\r\n                if (addFlag) {\r\n                    console.log(index);\r\n                    filteredRecordsArray_2.push(el);\r\n                }\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_2 = filteredRecordsArray_1;\r\n    }\r\n\r\n    console.log(filteredRecordsArray_2);\r\n\r\n    // selectedJobTypes////////////////\r\n\r\n    let selectedjobTypes = Array.from(jobTypeChildrenLoc)\r\n        .filter(function (elem) {\r\n            return elem.selected;\r\n        })\r\n        .map(function (elem) {\r\n            return elem.value;\r\n        });\r\n\r\n    console.log(selectedjobTypes);\r\n\r\n    let filteredRecordsArray_3 = [];\r\n\r\n    if (selectedjobTypes.length !== 0) {\r\n        filteredRecordsArray_2.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedjobTypes.forEach((selectedFiltr) => {\r\n                if (el.jobType === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                console.log(index);\r\n                filteredRecordsArray_3.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_3 = filteredRecordsArray_2;\r\n    }\r\n\r\n    console.log(filteredRecordsArray_3);\r\n\r\n    // selectedLangs ////////////////\r\n\r\n    let selectedLangs = Array.from(langChildrenLoc)\r\n        .filter(function (elem) {\r\n            return elem.selected;\r\n        })\r\n        .map(function (elem) {\r\n            return elem.value;\r\n        });\r\n\r\n    console.log(selectedLangs);\r\n\r\n    let filteredRecordsArray_4 = [];\r\n\r\n    if (selectedLangs.length !== 0) {\r\n        filteredRecordsArray_3.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedLangs.forEach((selectedFiltr) => {\r\n                if (el.lang === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                console.log(index);\r\n                filteredRecordsArray_4.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_4 = filteredRecordsArray_3;\r\n    }\r\n\r\n    console.log(filteredRecordsArray_4);\r\n\r\n    // selectedSalary ////////////////\r\n\r\n    let selectedValOne;\r\n    let selectedValTwo;\r\n    if (salaryMarkLoc.checked) {\r\n        selectedValOne = parseInt(displayValOne.innerText);\r\n        selectedValTwo = parseInt(displayValTwo.innerText);\r\n    }\r\n    console.log(selectedValOne);\r\n    console.log(selectedValTwo);\r\n\r\n    let filteredRecordsArray_5 = [];\r\n\r\n    if (salaryMarkLoc.checked) {\r\n        filteredRecordsArray_4.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            if (el.visibleRate) {\r\n                if (el.salaryTo && el.salaryFrom) {\r\n                    if (\r\n                        el.salaryTo >= selectedValOne &&\r\n                        el.salaryFrom <= selectedValTwo\r\n                    ) {\r\n                        addFlag = true;\r\n                    }\r\n                }\r\n                if (el.salaryTo && !el.salaryFrom) {\r\n                    if (el.salaryTo >= selectedValOne) {\r\n                        addFlag = true;\r\n                    }\r\n                }\r\n                if (!el.salaryTo && el.salaryFrom) {\r\n                    if (el.salaryFrom <= selectedValTwo) {\r\n                        addFlag = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (addFlag) {\r\n                console.log(index);\r\n                filteredRecordsArray_5.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_5 = filteredRecordsArray_4;\r\n    }\r\n\r\n    console.log(filteredRecordsArray_5);\r\n\r\n    // selectedCountry ////////////////\r\n\r\n    let selectedCountry = [];\r\n\r\n    if (locationMarkLoc.checked) {\r\n        selectedCountry = Array.from(countriesChildrenLoc)\r\n            .filter(function (elem) {\r\n                if (elem.value) {\r\n                    return elem.selected;\r\n                }\r\n            })\r\n            .map(function (elem) {\r\n                if (elem.value) {\r\n                    return elem.value;\r\n                }\r\n            });\r\n    }\r\n\r\n    console.log(selectedCountry);\r\n\r\n    let filteredRecordsArray_6 = [];\r\n\r\n    if (locationMarkLoc.checked) {\r\n        if (selectedCountry.length) {\r\n            filteredRecordsArray_5.forEach((el, index) => {\r\n                let addFlag = false;\r\n\r\n                selectedCountry.forEach((selectedFiltr) => {\r\n                    if (el.country === selectedFiltr) {\r\n                        addFlag = true;\r\n                    }\r\n                });\r\n\r\n                if (addFlag) {\r\n                    console.log(index);\r\n                    filteredRecordsArray_6.push(el);\r\n                }\r\n            });\r\n        } else {\r\n            filteredRecordsArray_6 = filteredRecordsArray_5;\r\n        }\r\n    } else {\r\n        filteredRecordsArray_6 = filteredRecordsArray_5;\r\n    }\r\n\r\n    console.log(filteredRecordsArray_6);\r\n\r\n    // selectedCity & selectedDistance ////////////////\r\n\r\n    let selectedCity = [];\r\n\r\n    if (locationMarkLoc.checked) {\r\n        selectedCity = Array.from(citiesChildrenLoc)\r\n            .filter(function (elem) {\r\n                if (elem.value) {\r\n                    return elem.selected;\r\n                }\r\n            })\r\n            .map(function (elem) {\r\n                if (elem.value) {\r\n                    return elem.value;\r\n                }\r\n            });\r\n    }\r\n\r\n    console.log(selectedCity);\r\n\r\n    let filteredRecordsArray_7 = [];\r\n\r\n    if (locationMarkLoc.checked) {\r\n        if (selectedCity.length) {\r\n            let selectedDistance = 0;\r\n\r\n            selectedDistance = parseInt(locationDotLoc.value);\r\n\r\n            console.log(selectedDistance);\r\n\r\n            let lati;\r\n            let longi;\r\n            let min_lati;\r\n            let max_lati;\r\n            let min_longi;\r\n            let max_longi;\r\n\r\n            filteredRecordsArray_6.forEach((el, index) => {\r\n                if (el.city === selectedCity[0]) {\r\n                    lati = el.lati;\r\n                    longi = el.longi;\r\n                    console.log(index);\r\n                    console.log(lati);\r\n                    console.log(longi);\r\n\r\n                    min_lati = lati - selectedDistance * 0.009044;\r\n                    max_lati = lati + selectedDistance * 0.009044;\r\n                    min_longi =\r\n                        longi -\r\n                        (selectedDistance * 0.0089831) /\r\n                            Math.cos((lati * Math.PI) / 180);\r\n                    max_longi =\r\n                        longi +\r\n                        (selectedDistance * 0.0089831) /\r\n                            Math.cos((lati * Math.PI) / 180);\r\n                    console.log(min_lati);\r\n                    console.log(max_lati);\r\n                    console.log(min_longi);\r\n                    console.log(max_longi);\r\n                }\r\n            });\r\n\r\n            filteredRecordsArray_6.forEach((el, index) => {\r\n                let addFlag = false;\r\n\r\n                if (\r\n                    el.lati <= max_lati &&\r\n                    el.lati >= min_lati &&\r\n                    el.longi <= max_longi &&\r\n                    el.longi >= min_longi\r\n                ) {\r\n                    addFlag = true;\r\n                }\r\n\r\n                if (addFlag) {\r\n                    console.log(index);\r\n                    filteredRecordsArray_7.push(el);\r\n                }\r\n            });\r\n        } else {\r\n            filteredRecordsArray_7 = filteredRecordsArray_6;\r\n        }\r\n    } else {\r\n        filteredRecordsArray_7 = filteredRecordsArray_6;\r\n    }\r\n\r\n    console.log(filteredRecordsArray_7);\r\n\r\n    // selectedRemote ////////////////\r\n\r\n    let filteredRecordsArray_8 = [];\r\n\r\n    if (remoteLoc.checked) {\r\n        filteredRecordsArray_7.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            if (el.remote) {\r\n                addFlag = true;\r\n            }\r\n\r\n            if (addFlag) {\r\n                console.log(index);\r\n                filteredRecordsArray_8.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_8 = filteredRecordsArray_7;\r\n    }\r\n\r\n    console.log(filteredRecordsArray_8);\r\n\r\n    // selectedRelocation ////////////////\r\n\r\n    let filteredRecordsArray_9 = [];\r\n\r\n    if (relocationLoc.checked) {\r\n        filteredRecordsArray_8.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            if (el.relocation) {\r\n                addFlag = true;\r\n            }\r\n\r\n            if (addFlag) {\r\n                console.log(index);\r\n                filteredRecordsArray_9.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_9 = filteredRecordsArray_8;\r\n    }\r\n\r\n    console.log(filteredRecordsArray_9);\r\n\r\n    // searchText ////////////////\r\n\r\n    filteredRecordsArray_10 = [];\r\n\r\n    let searchText = searchInputLoc.value;\r\n\r\n    if (searchText) {\r\n        filteredRecordsArray_9.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            let position;\r\n\r\n            el.description.forEach(function (elem) {\r\n                if (elem.value && elem.field_id !== \"geolocation\") {\r\n                    position = elem.value\r\n                        .toLowerCase()\r\n                        .search(searchText.toLowerCase());\r\n                    if (position !== -1) {\r\n                        addFlag = true;\r\n                    }\r\n                }\r\n            });\r\n\r\n            position = el.name.toLowerCase().search(searchText.toLowerCase());\r\n            if (position !== -1) {\r\n                addFlag = true;\r\n            }\r\n\r\n            if (addFlag) {\r\n                console.log(index);\r\n                filteredRecordsArray_10.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_10 = filteredRecordsArray_9;\r\n    }\r\n\r\n    console.log(filteredRecordsArray_10);\r\n\r\n    // recordsArray = filteredRecordsArray_10;\r\n    recordsNumber = filteredRecordsArray_10.length;\r\n    summariseDownload(recordsNumber);\r\n    createRecordBoxes(filteredRecordsArray_10, 0, recordsOnPage);\r\n    setPages(recordsNumber);\r\n    filtersON = true;\r\n};\r\n\r\nsearchBtn.addEventListener(\"click\", createFilteredRecordsArray);\r\n\r\n// COUNTRY & CITY LISTENER /////////////////////////////////////////////////////////////\r\n\r\nlocationMarkLoc.addEventListener(\"change\", function (e) {\r\n    if (e.target.checked) {\r\n        if (citiesLoc.value) {\r\n            locationSliderLoc.classList.remove(\"unactive\");\r\n            locationValuesLoc.classList.remove(\"unactive\");\r\n            locationDotLoc.disabled = false;\r\n        }\r\n\r\n        countriesLoc.disabled = false;\r\n        citiesLoc.disabled = false;\r\n    } else {\r\n        locationSliderLoc.classList.add(\"unactive\");\r\n        locationValuesLoc.classList.add(\"unactive\");\r\n        locationDotLoc.disabled = true;\r\n\r\n        countriesLoc.disabled = true;\r\n        citiesLoc.disabled = true;\r\n    }\r\n});\r\n\r\nfunction slideDistance() {\r\n    displayValDistance.textContent = locationDotLoc.value;\r\n}\r\n\r\nconst activateCities = () => {\r\n    citiesLoc.querySelectorAll(\"option\").forEach((el) => {\r\n        if (countriesLoc.value) {\r\n            if (\r\n                filterCountriesList[countriesLoc.value].findIndex(\r\n                    (sel_el) => sel_el.city === el.value\r\n                ) !== -1\r\n            ) {\r\n                el.classList.add(\"active\");\r\n            } else {\r\n                el.classList.remove(\"active\");\r\n            }\r\n        } else {\r\n            el.classList.add(\"active\");\r\n        }\r\n    });\r\n};\r\n\r\ncountriesLoc.addEventListener(\"change\", function () {\r\n    activateCities();\r\n\r\n    if (countriesLoc.value) {\r\n        if (\r\n            filterCountriesList[countriesLoc.value].find(\r\n                (el) => el.city !== citiesLoc.value\r\n            )\r\n        ) {\r\n            citiesLoc.value = filterCountriesList[countriesLoc.value][0].city;\r\n            locationSliderLoc.classList.remove(\"unactive\");\r\n            locationValuesLoc.classList.remove(\"unactive\");\r\n            locationDotLoc.disabled = false;\r\n        }\r\n    } else {\r\n        citiesLoc.value = citiesLoc[0].value;\r\n        locationSliderLoc.classList.add(\"unactive\");\r\n        locationValuesLoc.classList.add(\"unactive\");\r\n        locationDotLoc.disabled = true;\r\n    }\r\n});\r\n\r\ncitiesLoc.addEventListener(\"change\", function () {\r\n    Object.keys(filterCountriesList).find((key) => {\r\n        if (\r\n            filterCountriesList[key].findIndex(\r\n                (sel_el) => sel_el.city === citiesLoc.value\r\n            ) !== -1\r\n        ) {\r\n            if (countriesLoc.value !== key) {\r\n                countriesLoc.value = key;\r\n                activateCities();\r\n            }\r\n        }\r\n    });\r\n    if (!citiesLoc.value) {\r\n        locationSliderLoc.classList.add(\"unactive\");\r\n        locationValuesLoc.classList.add(\"unactive\");\r\n        locationDotLoc.disabled = true;\r\n    } else {\r\n        locationSliderLoc.classList.remove(\"unactive\");\r\n        locationValuesLoc.classList.remove(\"unactive\");\r\n        locationDotLoc.disabled = false;\r\n    }\r\n});\r\n\r\n// SALARY LISTENER ////////////////////////////////////////////////////////////////////\r\n\r\nlet minGap = 0;\r\n\r\nfunction slideOne() {\r\n    if (parseInt(sliderTwo.value) - parseInt(sliderOne.value) <= minGap) {\r\n        sliderOne.value = parseInt(sliderTwo.value) - minGap;\r\n    }\r\n    displayValOne.textContent = sliderOne.value;\r\n\r\n    if (sliderOne.value === sliderTwo.value) {\r\n        console.log(\"HHHHH\");\r\n        sliderOne.style.zIndex = \"1\";\r\n    } else {\r\n        sliderOne.style.zIndex = \"0\";\r\n    }\r\n\r\n    fillColor();\r\n}\r\n\r\nfunction slideTwo() {\r\n    if (parseInt(sliderTwo.value) - parseInt(sliderOne.value) <= minGap) {\r\n        sliderTwo.value = parseInt(sliderOne.value) + minGap;\r\n    }\r\n    displayValTwo.textContent = sliderTwo.value;\r\n    if (displayValTwo.textContent === \"100000\") {\r\n        salaryMarkLoc.disabled = true;\r\n        displayValOne.textContent = \"\";\r\n        displayValTwo.textContent = \"\";\r\n        pauseLoc.textContent = \"\";\r\n    }\r\n    fillColor();\r\n}\r\n\r\nfunction fillColor() {\r\n    percent1 =\r\n        ((sliderOne.value - sliderOne.min) / (sliderOne.max - sliderOne.min)) *\r\n        100;\r\n    percent2 =\r\n        ((sliderTwo.value - sliderOne.min) / (sliderOne.max - sliderOne.min)) *\r\n        100;\r\n    sliderTrack.style.background = `linear-gradient(to right, #dadae5 ${percent1}%, #fe7320ff ${percent1}%, #fe7320ff ${percent2}%, #dadae5 ${percent2}%)`;\r\n}\r\n\r\nsliderOne.value = filterMaxSalary.toString();\r\nsliderTwo.value = filterMinSalary.toString();\r\n\r\nsalaryMarkLoc.addEventListener(\"change\", function (e) {\r\n    if (e.target.checked) {\r\n        salarySliderLoc.classList.remove(\"unactive\");\r\n        salaryValuesLoc.classList.remove(\"unactive\");\r\n        sliderOne.disabled = false;\r\n        sliderTwo.disabled = false;\r\n    } else {\r\n        salarySliderLoc.classList.add(\"unactive\");\r\n        salaryValuesLoc.classList.add(\"unactive\");\r\n        sliderOne.disabled = true;\r\n        sliderTwo.disabled = true;\r\n    }\r\n});\r\n\r\n// set & change PAGE //////////////////////////////////////////////////////////\r\n\r\nconst changePage = (pageBtn) => {\r\n    pageButtonsLoc.forEach((el) => {\r\n        el.classList.remove(\"active\");\r\n    });\r\n    pageBtn.classList.add(\"active\");\r\n    let firstRecord =\r\n        recordsOnPage * parseInt(pageBtn.innerText) - recordsOnPage;\r\n    let lastRecord = recordsOnPage * parseInt(pageBtn.innerText);\r\n    filtersON\r\n        ? createRecordBoxes(filteredRecordsArray_10, firstRecord, lastRecord)\r\n        : createRecordBoxes(allRecordsArray, firstRecord, lastRecord);\r\n};\r\n\r\nconst setPages = (recordsNumber) => {\r\n    let pagesQuantity = Math.ceil(recordsNumber / recordsOnPage);\r\n\r\n    pagesSwitchLoc.replaceChildren();\r\n\r\n    for (n = 1; n <= pagesQuantity; n++) {\r\n        if (n === 1) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"page active\">${n}</div>`\r\n            );\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"page\">${n}</div>`\r\n            );\r\n        }\r\n    }\r\n\r\n    pageButtonsLoc = document.querySelectorAll(\".page\");\r\n    pageButtonsLoc.forEach((el) => {\r\n        el.addEventListener(\"click\", (e) => {\r\n            changePage(e.target);\r\n        });\r\n    });\r\n};\r\n\r\n// change RECORDS QUANTITY ON PAGE //////////////////////////////////////////////////\r\n\r\nrecordsOnPageLoc.forEach((el) => {\r\n    el.addEventListener(\"click\", (e) => {\r\n        recordsOnPageLoc.forEach((elem) => {\r\n            elem.classList.remove(\"active\");\r\n        });\r\n        document\r\n            .querySelector(`[data-value='${e.target.dataset.value}']`)\r\n            .classList.add(\"active\");\r\n\r\n        recordsOnPage = parseInt(e.target.dataset.value);\r\n\r\n        filtersON\r\n            ? createRecordBoxes(filteredRecordsArray_10, 0, recordsOnPage)\r\n            : createRecordBoxes(allRecordsArray, 0, recordsOnPage);\r\n        setPages(recordsNumber);\r\n    });\r\n});\r\n\r\n// show & hide MORE FILTERS //////////////////////////////////////////////////\r\n\r\ndropDownLoc.addEventListener(\"click\", () => {\r\n    dropDownBtnLoc.classList.toggle(\"up\");\r\n    if (dropDownFilterLoc.classList.contains(\"show\")) {\r\n        dropDownFilterLoc.classList.remove(\"show\");\r\n        dropDownFilterLoc.style.maxHeight = String(0) + \"px\";\r\n        moreFiltersLoc.classList.remove(\"hide\");\r\n        lessFiltersLoc.classList.remove(\"show\");\r\n    } else {\r\n        dropDownFilterLoc.classList.add(\"show\");\r\n        dropDownFilterLoc.style.maxHeight =\r\n            String(filterListMaxHeight + 200) + \"px\";\r\n        moreFiltersLoc.classList.add(\"hide\");\r\n        lessFiltersLoc.classList.add(\"show\");\r\n    }\r\n});\r\n"]}