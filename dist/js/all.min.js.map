{"version":3,"sources":["main.js"],"names":["recNumLoc","document","querySelector","noResultsLoc","resultsLoc","awardedResultsLoc","pagesContainer","pagesSwitchLoc","pageButtonsLoc","querySelectorAll","dropDownFilterLoc","dropDownLoc","dropDownBtnLoc","moreFiltersLoc","lessFiltersLoc","recordsOnPageLoc","branchesLoc","jobFormLoc","jobTypeLoc","langLoc","countriesLoc","citiesLoc","locationMarkLoc","locationDotLoc","locationSliderLoc","locationValuesLoc","displayValDistance","getElementById","salaryMarkLoc","salarySliderLoc","salaryValuesLoc","sliderOne","sliderTwo","displayValOne","displayValTwo","sliderTrack","pauseLoc","remoteLoc","relocationLoc","searchInputLoc","searchBtn","clearFiltersLoc","clearFilterLoc","salaryLoc","remoteWrapperLoc","relocationWrapperLoc","langWrapperLoc","closest","locWrapperLoc","brancheWrapperLoc","apiPage","rawAPIArray","allRecordsArray","filterBranchesList","filterJobFormList","filterJobTypeList","filterLangList","filterMinSalary","filterMaxSalary","filterCountriesList","recordsNumber","firstRecordNumber","recordsOnPage","filterListMaxHeight","filtersON","value","checked","disabled","createDataForFilters","branche","jobForm","jobType","lang","visibleRate","salaryFrom","salaryTo","country","city","lati","longi","indexOf","undefined","push","forEach","elem","findIndex","arr_el","reworkData","el","options","job_location","parsedJobLocation","JSON","parse","url","name","advert","branches","language","job_type","parseInt","_Widoczna_stawka","_spodziewane_wynagrodzenie_od","_spodziewane_wynagrodzenie_do","remote","relocation","_relokacja","recruitmentType","_rekrutacja_rodzaj","_forma_zatrudnienia","locality","parseFloat","latitude","longitude","description","values","awarded","summariseDownload","innerText","classList","remove","add","showHideFilters","toggle","contains","style","maxHeight","String","hideFilter","dropDownBtnStart","addEventListener","pagesContainerStart","createRecordBoxes","recordsArray","replaceChildren","console","log","filterConfigData","i","borderColorClass","textColorClass","recruitmentType_colorOnly","length","formaZatrudnienia","insertAdjacentHTML","createAwardedRecordBoxes","awardedRecordsArray","filter","getConfigFilter","fetch","async","readConfigFilter","rawData","json","createRecordsObjFromAPI","e","error","getAPI","mode","headers","loopOnAPI","jsonData","concat","setPages","createFilterLists","createFilteredRecordsArray","salary_visible","relocation_visible","language_visible","remote_visible","location_visible","branche_visible","isSamsungBrowser","navigator","userAgent","match","isChromeBrowser","sort","a","b","localeCompare","rowHeight","getMobileOperatingSystem","height","Object","keys","compare","key","reduce","accumulator","allCitiesObj","allCitiesArray","min","toString","max","slideOne","slideTwo","branchesChildrenLoc","jobFormChildrenLoc","jobTypeChildrenLoc","langChildrenLoc","countriesChildrenLoc","citiesChildrenLoc","filteredRecordsArray","selectedBranches","branche_filter","Array","from","selected","map","filteredRecordsArray_1","index","addFlag","selectedFiltr","selectedJobForms","filteredRecordsArray_2","selectedjobTypes","filteredRecordsArray_3","selectedLangs","language_filter","selectedValOne","selectedValTwo","filteredRecordsArray_4","filteredRecordsArray_5","selectedCountry","location_country_filter","filteredRecordsArray_6","selectedCity","location_city_filter","filteredRecordsArray_7","min_lati","max_lati","min_longi","max_longi","selectedDistance","Math","cos","PI","filteredRecordsArray_8","remote_filter","filteredRecordsArray_9","filteredRecordsArray_10","searchText","position","field_id","toLowerCase","search","selectedRecruitmentType","recruitmentType_filter","filteredRecordsArray_11","slideDistance","textContent","target","activateCities","sel_el","find","minGap","zIndex","fillColor","percent1","percent2","background","changePage","pageBtn","firstRecord","lastRecord","globActivePageNo","movePrevPagesBtns","activePageNo","firstDispalyedPageNo","shift","lastDispalyedPageNo","pop","n","pagesQuantityCalc","moveNextPagesBtns","getWidth","body","scrollWidth","documentElement","offsetWidth","clientWidth","getHeight","scrollHeight","offsetHeight","clientHeight","maxPageBtns","ceil","clearFilters","window","location","reload","vendor","opera","test","MSStream","elemFiltr","nextElementSibling","elOpt"],"mappings":"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","file":"all.min.js","sourcesContent":["const recNumLoc = document.querySelector(\".records-number\");\r\nconst noResultsLoc = document.querySelector(\".no-results\");\r\nconst resultsLoc = document.querySelector(\".results\");\r\nconst awardedResultsLoc = document.querySelector(\".awarded\");\r\nconst pagesContainer = document.querySelector(\".pages-container\");\r\nconst pagesSwitchLoc = document.querySelector(\".pages\");\r\nlet pageButtonsLoc = document.querySelectorAll(\".page\");\r\n\r\nconst dropDownFilterLoc = document.querySelector(\".drop-down-filters\");\r\nconst dropDownLoc = document.querySelector(\".drop-down-btn\");\r\nconst dropDownBtnLoc = document.querySelector(\".drop-down-btn img\");\r\nconst moreFiltersLoc = document.querySelector(\".more-filters\");\r\nconst lessFiltersLoc = document.querySelector(\".less-filters\");\r\n\r\nconst recordsOnPageLoc = document.querySelector(\".records-on-page\");\r\n\r\nconst branchesLoc = document.querySelector(\".branches\");\r\nconst jobFormLoc = document.querySelector(\".job-form\");\r\nconst jobTypeLoc = document.querySelector(\".job-type\");\r\nconst langLoc = document.querySelector(\".lang\");\r\nconst countriesLoc = document.querySelector(\".countries\");\r\nconst citiesLoc = document.querySelector(\".cities\");\r\n\r\nconst locationMarkLoc = document.querySelector(\"#localization\");\r\nconst locationDotLoc = document.querySelector(\"#loc-slider\");\r\nconst locationSliderLoc = document.querySelector(\r\n    \".distance-slider .slider-container .container\"\r\n);\r\nconst locationValuesLoc = document.querySelector(\r\n    \".distance-slider .slider-values\"\r\n);\r\nconst displayValDistance = document.getElementById(\"range3\");\r\n\r\nconst salaryMarkLoc = document.querySelector(\"#salary-mark\");\r\nconst salarySliderLoc = document.querySelector(\r\n    \".salary .slider-container .container\"\r\n);\r\nconst salaryValuesLoc = document.querySelector(\".salary .slider-values\");\r\nconst sliderOne = document.querySelector(\"#slider-1\");\r\nconst sliderTwo = document.querySelector(\"#slider-2\");\r\nconst displayValOne = document.getElementById(\"range1\");\r\nconst displayValTwo = document.getElementById(\"range2\");\r\nconst sliderTrack = document.querySelector(\".salary .slider-track\");\r\nconst pauseLoc = document.querySelector(\".salary .pause\");\r\n\r\nconst remoteLoc = document.querySelector(\"#remote\");\r\nconst relocationLoc = document.querySelector(\"#relocation\");\r\n\r\nconst searchInputLoc = document.querySelector(\".search-input input\");\r\n\r\nconst searchBtn = document.querySelector(\".search-btn\");\r\n\r\nconst clearFiltersLoc = document.querySelector(\".clear-filters\");\r\nconst clearFilterLoc = document.querySelectorAll(\".lists .list .clear-list\");\r\n\r\nconst salaryLoc = document.querySelector(\".salary\");\r\nconst remoteWrapperLoc = document.querySelector(\".remote-wrapper\");\r\nconst relocationWrapperLoc = document.querySelector(\".relocation-wrapper\");\r\nconst langWrapperLoc = document.querySelector(\"#lang\").closest(\"div\");\r\nconst locWrapperLoc = document.querySelector(\".loc-container\");\r\nconst brancheWrapperLoc = document.querySelector(\"#branches\").closest(\"div\");\r\n\r\nlet apiPage = 1;\r\nlet rawAPIArray = [];\r\nlet allRecordsArray = [];\r\n\r\nlet filterBranchesList = [];\r\nlet filterJobFormList = [];\r\nlet filterJobTypeList = [];\r\nlet filterLangList = [];\r\nlet filterMinSalary = 100000;\r\nlet filterMaxSalary = 0;\r\nlet filterCountriesList = {};\r\n\r\nlet recordsNumber = 0;\r\nlet firstRecordNumber = 0;\r\nlet recordsOnPage = 20;\r\n\r\nlet filterListMaxHeight = 0;\r\n\r\nlet filtersON = false;\r\n\r\nsearchInputLoc.value = \"\";\r\nrecordsOnPageLoc.value = 20;\r\n\r\nlocationMarkLoc.checked = false;\r\nlocationDotLoc.disabled = true;\r\ncountriesLoc.disabled = true;\r\ncitiesLoc.disabled = true;\r\nlocationDotLoc.value = 0;\r\n\r\nsalaryMarkLoc.checked = false;\r\nsliderOne.disabled = true;\r\nsliderTwo.disabled = true;\r\n\r\nremoteLoc.checked = false;\r\nrelocationLoc.checked = false;\r\n\r\n// create FILTER DATA from API data ///////////////////////////////////////////////\r\nconst createDataForFilters = (\r\n    branche,\r\n    jobForm,\r\n    jobType,\r\n    lang,\r\n    visibleRate,\r\n    salaryFrom,\r\n    salaryTo,\r\n    country,\r\n    city,\r\n    lati,\r\n    longi\r\n) => {\r\n    if (filterBranchesList.indexOf(branche) === -1 && branche !== undefined) {\r\n        filterBranchesList.push(branche);\r\n    }\r\n    if (jobForm) {\r\n        jobForm.forEach(function (elem) {\r\n            if (filterJobFormList.indexOf(elem) === -1) {\r\n                filterJobFormList.push(elem);\r\n            }\r\n        });\r\n    }\r\n    if (filterJobTypeList.indexOf(jobType) === -1 && jobType !== undefined) {\r\n        filterJobTypeList.push(jobType);\r\n    }\r\n    if (filterLangList.indexOf(lang) === -1) {\r\n        filterLangList.push(lang);\r\n    }\r\n    if (visibleRate) {\r\n        if (salaryFrom < filterMinSalary) {\r\n            filterMinSalary = salaryFrom;\r\n        }\r\n        if (salaryTo > filterMaxSalary) {\r\n            filterMaxSalary = salaryTo;\r\n        }\r\n    }\r\n    if (filterCountriesList[country]) {\r\n        if (\r\n            filterCountriesList[country].findIndex(\r\n                (arr_el) => arr_el.city === city\r\n            ) === -1\r\n        ) {\r\n            filterCountriesList[country].push({\r\n                city: city,\r\n                lati: lati,\r\n                longi: longi,\r\n            });\r\n        }\r\n    } else {\r\n        filterCountriesList[country] = [];\r\n        filterCountriesList[country].push({\r\n            city: city,\r\n            lati: lati,\r\n            longi: longi,\r\n        });\r\n    }\r\n};\r\n\r\n// create OBJECTS ARRAY from Raw API JSON ///////////////////////////////////////////////\r\nconst reworkData = (rawAPIArray) => {\r\n    rawAPIArray.forEach((el) => {\r\n        if (el.options.job_location) {\r\n            parsedJobLocation = JSON.parse(el.options.job_location);\r\n        }\r\n\r\n        allRecordsArray.push({\r\n            url: el.url,\r\n            name: el.advert.name,\r\n            branche: el.options.branches,\r\n            lang: el.advert.language,\r\n            jobType: el.options.job_type,\r\n            visibleRate: parseInt(el.options._Widoczna_stawka),\r\n            salaryFrom: parseInt(el.options._spodziewane_wynagrodzenie_od),\r\n            salaryTo: parseInt(el.options._spodziewane_wynagrodzenie_do),\r\n            remote: el.options.remote,\r\n            relocation: el.options._relokacja,\r\n            recruitmentType: el.options._rekrutacja_rodzaj,\r\n            jobForm: el.options._forma_zatrudnienia,\r\n            country: parsedJobLocation.country,\r\n            city: parsedJobLocation.locality,\r\n            lati: parseFloat(parsedJobLocation.latitude),\r\n            longi: parseFloat(parsedJobLocation.longitude),\r\n            description: el.advert.values,\r\n            awarded: el.awarded,\r\n        });\r\n\r\n        createDataForFilters(\r\n            el.options.branches,\r\n            el.options._forma_zatrudnienia,\r\n            el.options.job_type,\r\n            el.advert.language,\r\n            parseInt(el.options._Widoczna_stawka),\r\n            parseInt(el.options._spodziewane_wynagrodzenie_od),\r\n            parseInt(el.options._spodziewane_wynagrodzenie_do),\r\n            parsedJobLocation.country,\r\n            parsedJobLocation.locality,\r\n            parseFloat(parsedJobLocation.latitude),\r\n            parseFloat(parsedJobLocation.longitude)\r\n        );\r\n    });\r\n};\r\n\r\n// show RECORDS NUMBER ///////////////////////////////////////////////\r\n\r\nconst summariseDownload = (recordsNumber) => {\r\n    recNumLoc.innerText = `Znaleziono ${recordsNumber} ogłoszeń`;\r\n    if (!recordsNumber) {\r\n        noResultsLoc.classList.add(\"active\");\r\n    } else {\r\n        noResultsLoc.classList.remove(\"active\");\r\n    }\r\n};\r\n\r\n// show & hide MORE FILTERS //////////////////////////////////////////////////\r\n\r\nconst showHideFilters = () => {\r\n    dropDownBtnLoc.classList.toggle(\"up\");\r\n    if (dropDownFilterLoc.classList.contains(\"show\")) {\r\n        dropDownFilterLoc.classList.remove(\"show\");\r\n        dropDownFilterLoc.style.maxHeight = String(0) + \"px\";\r\n        moreFiltersLoc.classList.remove(\"hide\");\r\n        lessFiltersLoc.classList.remove(\"show\");\r\n    } else {\r\n        dropDownFilterLoc.classList.add(\"show\");\r\n        dropDownFilterLoc.style.maxHeight = \"1000px\";\r\n        moreFiltersLoc.classList.add(\"hide\");\r\n        lessFiltersLoc.classList.add(\"show\");\r\n    }\r\n};\r\n\r\nconst hideFilter = () => {\r\n    if (dropDownFilterLoc.classList.contains(\"show\")) {\r\n        dropDownBtnLoc.classList.toggle(\"up\");\r\n        dropDownFilterLoc.classList.remove(\"show\");\r\n        dropDownFilterLoc.style.maxHeight = String(0) + \"px\";\r\n        moreFiltersLoc.classList.remove(\"hide\");\r\n        lessFiltersLoc.classList.remove(\"show\");\r\n    }\r\n};\r\n\r\nconst dropDownBtnStart = () => {\r\n    dropDownLoc.addEventListener(\"click\", showHideFilters);\r\n\r\n    dropDownLoc.classList.add(\"active\");\r\n};\r\n\r\nconst pagesContainerStart = () => {\r\n    pagesContainer.classList.add(\"active\");\r\n};\r\n\r\n// create RECORDS BOXES ///////////////////////////////////////////////\r\n\r\nconst createRecordBoxes = (recordsArray, firstRecordNumber, recordsOnPage) => {\r\n    resultsLoc.replaceChildren();\r\n\r\n    console.log(recordsArray);\r\n\r\n    console.log(filterConfigData);\r\n\r\n    for (i = firstRecordNumber; i < recordsOnPage; i++) {\r\n        // colouring of records by type of recruitment\r\n\r\n        if (recordsArray[i]) {\r\n            let borderColorClass = \"\";\r\n            let textColorClass = \"\";\r\n\r\n            if (!filterConfigData.recruitmentType_colorOnly.length) {\r\n                if (recordsArray[i].recruitmentType === \"PT\") {\r\n                    borderColorClass = \"pt-border\";\r\n                    textColorClass = \"pt-text\";\r\n                }\r\n                if (recordsArray[i].recruitmentType === \"RS\") {\r\n                    borderColorClass = \"rs-border\";\r\n                    textColorClass = \"rs-text\";\r\n                }\r\n                if (recordsArray[i].recruitmentType === \"WEW\") {\r\n                    borderColorClass = \"wew-border\";\r\n                    textColorClass = \"wew-text\";\r\n                }\r\n            } else {\r\n                if (\r\n                    filterConfigData.recruitmentType_colorOnly.indexOf(\"PT\") !==\r\n                    -1\r\n                ) {\r\n                    if (recordsArray[i].recruitmentType === \"PT\") {\r\n                        borderColorClass = \"pt-border\";\r\n                        textColorClass = \"pt-text\";\r\n                    }\r\n                }\r\n\r\n                if (\r\n                    filterConfigData.recruitmentType_colorOnly.indexOf(\"RS\") !==\r\n                    -1\r\n                ) {\r\n                    if (recordsArray[i].recruitmentType === \"RS\") {\r\n                        borderColorClass = \"rs-border\";\r\n                        textColorClass = \"rs-text\";\r\n                    }\r\n                }\r\n\r\n                if (\r\n                    filterConfigData.recruitmentType_colorOnly.indexOf(\r\n                        \"WEW\"\r\n                    ) !== -1\r\n                ) {\r\n                    if (recordsArray[i].recruitmentType === \"WEW\") {\r\n                        borderColorClass = \"wew-border\";\r\n                        textColorClass = \"wew-text\";\r\n                    }\r\n                }\r\n            }\r\n\r\n            let formaZatrudnienia = \"\";\r\n\r\n            if (recordsArray[i].jobForm) {\r\n                recordsArray[i].jobForm.forEach(function (elem) {\r\n                    formaZatrudnienia =\r\n                        formaZatrudnienia + \"<p>\" + elem + \"</p>\";\r\n                });\r\n            }\r\n\r\n            resultsLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<a href=\"${\r\n                    recordsArray[i].url\r\n                }\" target=\"_blank\"><div class=\"result ${borderColorClass}\">\r\n            <div class=\"top\">\r\n              \r\n                    <div class=\"lang\"><p>${recordsArray[i].lang}</p></div>\r\n                    <div class=\"branche-name\">\r\n                        <div class=\"branche\">${\r\n                            recordsArray[i].branche\r\n                                ? recordsArray[i].branche\r\n                                : \"\"\r\n                        }</div>\r\n                        <div class=\"name ${textColorClass}\">${\r\n                    recordsArray[i].name\r\n                }</div>\r\n                   \r\n                </div>\r\n              \r\n            </div>\r\n\r\n            <div class=\"bottom\">\r\n                <div class=\"city-container\">\r\n                    <div class=\"city\"><img src=\"./img/location_dot.svg\">${\r\n                        recordsArray[i].city\r\n                    }</div>\r\n                    </div>\r\n                    <div class=\"details-container\">\r\n                    ${\r\n                        recordsArray[i].jobType\r\n                            ? \"<div class='jobtype'>\" +\r\n                              recordsArray[i].jobType +\r\n                              \"</div>\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        recordsArray[i].visibleRate\r\n                            ? recordsArray[i].salaryFrom &&\r\n                              recordsArray[i].salaryTo\r\n                                ? \"<div class='salary'>\" +\r\n                                  recordsArray[i].salaryFrom +\r\n                                  \" - \" +\r\n                                  recordsArray[i].salaryTo +\r\n                                  \"</div>\"\r\n                                : \"\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        recordsArray[i].remote\r\n                            ? \"<div class='remote'>zdalna</div>\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        recordsArray[i].relocation\r\n                            ? \"<div class='relocation'>relocation</div>\"\r\n                            : \"\"\r\n                    }\r\n                    <div class=\"employmentform\">${formaZatrudnienia}</div>\r\n                    </div>\r\n                </div>\r\n                   \r\n                </div>\r\n          \r\n\r\n        </div></a>`\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\n// create RECORDS BOXES ///////////////////////////////////////////////\r\n\r\nconst createAwardedRecordBoxes = (recordsArray) => {\r\n    awardedResultsLoc.replaceChildren();\r\n\r\n    let awardedRecordsArray = recordsArray.filter((elem) => {\r\n        return elem.awarded;\r\n    });\r\n\r\n    for (i = firstRecordNumber; i < 10; i++) {\r\n        if (awardedRecordsArray[i]) {\r\n            let borderColorClass = \"\";\r\n            let textColorClass = \"\";\r\n\r\n            if (awardedRecordsArray[i].recruitmentType === \"PT\") {\r\n                borderColorClass = \"pt-border\";\r\n                textColorClass = \"pt-text\";\r\n            }\r\n            if (awardedRecordsArray[i].recruitmentType === \"RS\") {\r\n                borderColorClass = \"rs-border\";\r\n                textColorClass = \"rs-text\";\r\n            }\r\n            if (awardedRecordsArray[i].recruitmentType === \"WEW\") {\r\n                borderColorClass = \"wew-border\";\r\n                textColorClass = \"wew-text\";\r\n            }\r\n\r\n            let formaZatrudnienia = \"\";\r\n\r\n            if (awardedRecordsArray[i].jobForm) {\r\n                awardedRecordsArray[i].jobForm.forEach(function (elem) {\r\n                    formaZatrudnienia =\r\n                        formaZatrudnienia + \"<p>\" + elem + \"</p>\";\r\n                });\r\n            }\r\n\r\n            awardedResultsLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<a href=\"${\r\n                    awardedRecordsArray[i].url\r\n                }\" target=\"_blank\"><div class=\"result ${borderColorClass}\">\r\n            <div class=\"top\">\r\n               \r\n                    <div class=\"lang\">\r\n                        <p>${awardedRecordsArray[i].lang}</p>\r\n                    </div>\r\n                    <div class=\"branche-name\">\r\n                        <div class=\"branche\">${\r\n                            awardedRecordsArray[i].branche\r\n                                ? awardedRecordsArray[i].branche\r\n                                : \"\"\r\n                        }</div>\r\n                        <div class=\"name ${textColorClass}\">${\r\n                    awardedRecordsArray[i].name\r\n                }</div>\r\n                    </div>\r\n                \r\n            </div>\r\n\r\n            <div class=\"bottom\">\r\n                <div class=\"city-container\">\r\n                    <div class=\"city\"><img src=\"./img/location_dot.svg\">${\r\n                        awardedRecordsArray[i].city\r\n                    }</div></div>\r\n                    <div class=\"details-container\">\r\n                    ${\r\n                        awardedRecordsArray[i].remote\r\n                            ? \"<div class='remote'>zdalna</div>\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        awardedRecordsArray[i].relocation\r\n                            ? \"<div class='relocation'>relocation</div>\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        awardedRecordsArray[i].jobType\r\n                            ? \"<div class='jobtype'>\" +\r\n                              awardedRecordsArray[i].jobType +\r\n                              \"</div>\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        awardedRecordsArray[i].visibleRate\r\n                            ? awardedRecordsArray[i].salaryFrom &&\r\n                              awardedRecordsArray[i].salaryTo\r\n                                ? \"<div class='salary'>\" +\r\n                                  awardedRecordsArray[i].salaryFrom +\r\n                                  \" - \" +\r\n                                  awardedRecordsArray[i].salaryTo +\r\n                                  \"</div>\"\r\n                                : \"\"\r\n                            : \"\"\r\n                    }\r\n                    <div class=\"employmentform\">${formaZatrudnienia}</div>\r\n                    </div>\r\n                \r\n            </div>\r\n\r\n            <div class=\"ribbon-wrap\">\r\n                    <div class=\"ribbon\">\r\n                            <img src=\"./img/star.svg\" alt=\"\">\r\n                            <img src=\"./img/star.svg\" alt=\"\">\r\n                            <img src=\"./img/star.svg\" alt=\"\">\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n\r\n            \r\n\r\n        </div></a>`\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nlet filterConfigData = {};\r\n\r\n// consider configuration filters ////////////////////////\r\nconst getConfigFilter = () => {\r\n    const response = fetch(\"./config/config.json\");\r\n    return response;\r\n};\r\n\r\nasync function readConfigFilter() {\r\n    try {\r\n        const rawData = await getConfigFilter();\r\n        filterConfigData = await rawData.json();\r\n        createRecordsObjFromAPI(apiPage, filterConfigData);\r\n    } catch (e) {\r\n        console.error(e);\r\n        createRecordsObjFromAPI(apiPage);\r\n    }\r\n}\r\n\r\nreadConfigFilter();\r\n\r\n// gets DATA FROM API ///////////////////////////////////////////////\r\n\r\nconst getAPI = (apiPage) => {\r\n    const response = fetch(\r\n        \"https://grupaprogres.traffit.com/public/job_posts/published\", // deactivate in local mode\r\n        //\"response.json\" // activate in local mode\r\n        {\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-Request-Page-Size\": \"100\",\r\n                \"X-Request-Current-Page\": apiPage,\r\n                \"X-Request-Sort\": '{\"sort_by\": \"id\", \"direction\": \"ASC\"}',\r\n            },\r\n        }\r\n    );\r\n\r\n    return response;\r\n};\r\n\r\nconst loopOnAPI = (jsonData, filterConfigData) => {\r\n    if (jsonData.length > 0) {\r\n        // deactivate in local mode\r\n        rawAPIArray = rawAPIArray.concat(jsonData); // deactivate in local mode\r\n        // rawAPIArray = jsonData; // activate in local mode\r\n        apiPage++; // deactivate in local mode\r\n        createRecordsObjFromAPI(apiPage, filterConfigData); // deactivate in local mode\r\n    } else {\r\n        // deactivate in local mode\r\n        reworkData(rawAPIArray);\r\n        recordsNumber = rawAPIArray.length;\r\n        summariseDownload(recordsNumber);\r\n        createRecordBoxes(allRecordsArray, firstRecordNumber, recordsOnPage);\r\n        createAwardedRecordBoxes(allRecordsArray);\r\n        setPages(recordsNumber);\r\n        createFilterLists(filterConfigData);\r\n        dropDownBtnStart();\r\n        pagesContainerStart();\r\n        createFilteredRecordsArray();\r\n    } // deactivate in local mode\r\n};\r\n\r\nasync function createRecordsObjFromAPI(apiPage, filterConfigData) {\r\n    const rawData = await getAPI(apiPage);\r\n    const jsonData = await rawData.json();\r\n    loopOnAPI(jsonData, filterConfigData);\r\n}\r\n\r\n// create HTML FILTERS LISTS //////////////////////////////////////////////////////\r\n\r\nconst createFilterLists = (filterConfigData) => {\r\n    // include external filter config ///////////////////\r\n    console.log(filterConfigData);\r\n\r\n    if (!filterConfigData.salary_visible) {\r\n        salaryLoc.classList.add(\"unactive\");\r\n    }\r\n\r\n    if (!filterConfigData.relocation_visible) {\r\n        relocationWrapperLoc.classList.add(\"unactive\");\r\n    }\r\n\r\n    if (!filterConfigData.language_visible) {\r\n        langWrapperLoc.classList.add(\"unactive\");\r\n    }\r\n\r\n    if (!filterConfigData.remote_visible) {\r\n        remoteWrapperLoc.classList.add(\"unactive\");\r\n    }\r\n\r\n    if (!filterConfigData.location_visible) {\r\n        locWrapperLoc.classList.add(\"unactive\");\r\n    }\r\n\r\n    if (!filterConfigData.branche_visible) {\r\n        brancheWrapperLoc.classList.add(\"unactive\");\r\n    }\r\n\r\n    let isSamsungBrowser = navigator.userAgent.match(/SamsungBrowser/i);\r\n    let isChromeBrowser = navigator.userAgent.match(/Chrome/i);\r\n\r\n    if (filterBranchesList.length > 0) {\r\n        filterBranchesList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterBranchesList.length * 21 + 3;\r\n        filterListMaxHeight = rowHeight;\r\n        if (getMobileOperatingSystem() === \"unknown\") {\r\n            branchesLoc.style.height = String(rowHeight) + \"px\";\r\n        } else if (isSamsungBrowser || isChromeBrowser) {\r\n            branchesLoc.style.height = \"50px\";\r\n        } else {\r\n            branchesLoc.style.height = String(rowHeight) + \"px\";\r\n        }\r\n        filterBranchesList.forEach(function (el) {\r\n            branchesLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${el}\">${el}</option>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (filterJobFormList.length > 0) {\r\n        filterJobFormList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterJobFormList.length * 21 + 3;\r\n        if (getMobileOperatingSystem() === \"unknown\") {\r\n            jobFormLoc.style.height = String(rowHeight) + \"px\";\r\n        } else if (isSamsungBrowser || isChromeBrowser) {\r\n            jobFormLoc.style.height = \"50px\";\r\n        } else {\r\n            jobFormLoc.style.height = String(rowHeight) + \"px\";\r\n        }\r\n        filterJobFormList.forEach(function (el) {\r\n            jobFormLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${el}\">${el}</option>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (filterJobTypeList.length > 0) {\r\n        filterJobTypeList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterJobTypeList.length * 21 + 3;\r\n        if (getMobileOperatingSystem() === \"unknown\") {\r\n            jobTypeLoc.style.height = String(rowHeight) + \"px\";\r\n        } else if (isSamsungBrowser || isChromeBrowser) {\r\n            jobTypeLoc.style.height = \"50px\";\r\n        } else {\r\n            jobTypeLoc.style.height = String(rowHeight) + \"px\";\r\n        }\r\n        filterJobTypeList.forEach(function (el) {\r\n            jobTypeLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${el}\">${el}</option>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (filterLangList.length > 0) {\r\n        filterLangList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterLangList.length * 21 + 3;\r\n        if (getMobileOperatingSystem() === \"unknown\") {\r\n            langLoc.style.height = String(rowHeight) + \"px\";\r\n        } else if (isSamsungBrowser || isChromeBrowser) {\r\n            langLoc.style.height = \"50px\";\r\n        } else {\r\n            langLoc.style.height = String(rowHeight) + \"px\";\r\n        }\r\n        filterLangList.forEach(function (el) {\r\n            langLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${el}\">${el}</option>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (Object.keys(filterCountriesList).length > 0) {\r\n        countriesLoc.insertAdjacentHTML(\r\n            \"beforeend\",\r\n            `<option value=\"\" class=\"placeholder\">Państwo</option>`\r\n        );\r\n\r\n        citiesLoc.insertAdjacentHTML(\r\n            \"beforeend\",\r\n            `<option value=\"\" class=\"placeholder\">Miasto</option>`\r\n        );\r\n\r\n        function compare(a, b) {\r\n            return a.city.localeCompare(b.city);\r\n        }\r\n\r\n        for (let key in filterCountriesList) {\r\n            filterCountriesList[key].sort(compare);\r\n        }\r\n\r\n        filterCountriesList = Object.keys(filterCountriesList)\r\n            .sort()\r\n            .reduce((accumulator, key) => {\r\n                accumulator[key] = filterCountriesList[key];\r\n                return accumulator;\r\n            }, {});\r\n\r\n        let allCitiesObj = [];\r\n        for (let key in filterCountriesList) {\r\n            countriesLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${key}\">${key}</option>`\r\n            );\r\n            allCitiesObj = allCitiesObj.concat(filterCountriesList[key]);\r\n        }\r\n\r\n        let allCitiesArray = [];\r\n        allCitiesObj.forEach((el) => {\r\n            allCitiesArray.push(el.city);\r\n        });\r\n\r\n        allCitiesArray.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n\r\n        allCitiesArray.forEach(function (el) {\r\n            citiesLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${el}\" class=\"active\">${el} </option>`\r\n            );\r\n        });\r\n    }\r\n\r\n    sliderOne.min = filterMinSalary.toString();\r\n    sliderTwo.min = filterMinSalary.toString();\r\n    sliderOne.max = filterMaxSalary.toString();\r\n    sliderTwo.max = filterMaxSalary.toString();\r\n    sliderOne.value = filterMinSalary.toString();\r\n    sliderTwo.value = filterMaxSalary.toString();\r\n    slideOne();\r\n    slideTwo();\r\n};\r\n\r\n// filter the data to create FILTERED OBJECTS ARRAY ///////////////////////////////\r\n\r\nconst createFilteredRecordsArray = () => {\r\n    const branchesChildrenLoc = document.querySelectorAll(\".branches option\");\r\n    const jobFormChildrenLoc = document.querySelectorAll(\".job-form option\");\r\n    const jobTypeChildrenLoc = document.querySelectorAll(\".job-type option\");\r\n    const langChildrenLoc = document.querySelectorAll(\".lang option\");\r\n    const countriesChildrenLoc = document.querySelectorAll(\".countries option\");\r\n    const citiesChildrenLoc = document.querySelectorAll(\".cities option\");\r\n\r\n    console.log(filterConfigData);\r\n\r\n    let filteredRecordsArray = allRecordsArray;\r\n\r\n    // selectedBranches ////////////////\r\n\r\n    let selectedBranches = [];\r\n\r\n    if (\r\n        filterConfigData.branche_filter.length &&\r\n        !filterConfigData.branche_visible\r\n    ) {\r\n        selectedBranches = filterConfigData.branche_filter;\r\n    } else {\r\n        selectedBranches = Array.from(branchesChildrenLoc)\r\n            .filter(function (elem) {\r\n                return elem.selected;\r\n            })\r\n            .map(function (elem) {\r\n                return elem.value;\r\n            });\r\n    }\r\n\r\n    let filteredRecordsArray_1 = [];\r\n\r\n    if (selectedBranches.length !== 0) {\r\n        filteredRecordsArray.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedBranches.forEach((selectedFiltr) => {\r\n                if (el.branche === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_1.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_1 = filteredRecordsArray;\r\n    }\r\n\r\n    // selectedJobForms ////////////////\r\n\r\n    let selectedJobForms = Array.from(jobFormChildrenLoc)\r\n        .filter(function (elem) {\r\n            return elem.selected;\r\n        })\r\n        .map(function (elem) {\r\n            return elem.value;\r\n        });\r\n\r\n    let filteredRecordsArray_2 = [];\r\n\r\n    if (selectedJobForms.length !== 0) {\r\n        filteredRecordsArray_1.forEach((el, index) => {\r\n            if (el.jobForm) {\r\n                let addFlag = false;\r\n\r\n                selectedJobForms.forEach((selectedFiltr) => {\r\n                    if (el.jobForm.indexOf(selectedFiltr) !== -1) {\r\n                        addFlag = true;\r\n                    }\r\n                });\r\n\r\n                if (addFlag) {\r\n                    filteredRecordsArray_2.push(el);\r\n                }\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_2 = filteredRecordsArray_1;\r\n    }\r\n\r\n    // selectedJobTypes////////////////\r\n\r\n    let selectedjobTypes = Array.from(jobTypeChildrenLoc)\r\n        .filter(function (elem) {\r\n            return elem.selected;\r\n        })\r\n        .map(function (elem) {\r\n            return elem.value;\r\n        });\r\n\r\n    let filteredRecordsArray_3 = [];\r\n\r\n    if (selectedjobTypes.length !== 0) {\r\n        filteredRecordsArray_2.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedjobTypes.forEach((selectedFiltr) => {\r\n                if (el.jobType === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_3.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_3 = filteredRecordsArray_2;\r\n    }\r\n\r\n    // selectedLangs ////////////////\r\n    let selectedLangs = [];\r\n\r\n    if (\r\n        filterConfigData.language_filter.length &&\r\n        !filterConfigData.language_visible\r\n    ) {\r\n        selectedLangs = filterConfigData.language_filter;\r\n    } else {\r\n        selectedLangs = Array.from(langChildrenLoc)\r\n            .filter(function (elem) {\r\n                return elem.selected;\r\n            })\r\n            .map(function (elem) {\r\n                return elem.value;\r\n            });\r\n    }\r\n\r\n    let filteredRecordsArray_4 = [];\r\n\r\n    if (selectedLangs.length !== 0) {\r\n        filteredRecordsArray_3.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedLangs.forEach((selectedFiltr) => {\r\n                if (el.lang === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_4.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_4 = filteredRecordsArray_3;\r\n    }\r\n\r\n    // selectedSalary ////////////////\r\n\r\n    let selectedValOne;\r\n    let selectedValTwo;\r\n    if (salaryMarkLoc.checked) {\r\n        selectedValOne = parseInt(displayValOne.innerText);\r\n        selectedValTwo = parseInt(displayValTwo.innerText);\r\n    }\r\n\r\n    let filteredRecordsArray_5 = [];\r\n\r\n    if (salaryMarkLoc.checked) {\r\n        filteredRecordsArray_4.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            if (el.visibleRate) {\r\n                if (el.salaryTo && el.salaryFrom) {\r\n                    if (\r\n                        el.salaryTo >= selectedValOne &&\r\n                        el.salaryFrom <= selectedValTwo\r\n                    ) {\r\n                        addFlag = true;\r\n                    }\r\n                }\r\n                if (el.salaryTo && !el.salaryFrom) {\r\n                    if (el.salaryTo >= selectedValOne) {\r\n                        addFlag = true;\r\n                    }\r\n                }\r\n                if (!el.salaryTo && el.salaryFrom) {\r\n                    if (el.salaryFrom <= selectedValTwo) {\r\n                        addFlag = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_5.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_5 = filteredRecordsArray_4;\r\n    }\r\n\r\n    // selectedCountry ////////////////\r\n\r\n    let selectedCountry = [];\r\n\r\n    if (\r\n        filterConfigData.location_country_filter.length &&\r\n        !filterConfigData.location_visible\r\n    ) {\r\n        selectedCountry = filterConfigData.location_country_filter;\r\n    } else {\r\n        if (locationMarkLoc.checked) {\r\n            selectedCountry = Array.from(countriesChildrenLoc)\r\n                .filter(function (elem) {\r\n                    if (elem.value) {\r\n                        return elem.selected;\r\n                    }\r\n                })\r\n                .map(function (elem) {\r\n                    if (elem.value) {\r\n                        return elem.value;\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    let filteredRecordsArray_6 = [];\r\n\r\n    if (\r\n        locationMarkLoc.checked ||\r\n        (filterConfigData.location_country_filter.length &&\r\n            !filterConfigData.location_visible)\r\n    ) {\r\n        if (selectedCountry.length) {\r\n            filteredRecordsArray_5.forEach((el, index) => {\r\n                let addFlag = false;\r\n\r\n                selectedCountry.forEach((selectedFiltr) => {\r\n                    if (el.country === selectedFiltr) {\r\n                        addFlag = true;\r\n                    }\r\n                });\r\n\r\n                if (addFlag) {\r\n                    filteredRecordsArray_6.push(el);\r\n                }\r\n            });\r\n        } else {\r\n            filteredRecordsArray_6 = filteredRecordsArray_5;\r\n        }\r\n    } else {\r\n        filteredRecordsArray_6 = filteredRecordsArray_5;\r\n    }\r\n\r\n    // selectedCity & selectedDistance ////////////////\r\n\r\n    let selectedCity = [];\r\n\r\n    if (\r\n        filterConfigData.location_city_filter.length &&\r\n        !filterConfigData.location_visible\r\n    ) {\r\n        selectedCity = filterConfigData.location_city_filter;\r\n    } else {\r\n        if (locationMarkLoc.checked) {\r\n            selectedCity = Array.from(citiesChildrenLoc)\r\n                .filter(function (elem) {\r\n                    if (elem.value) {\r\n                        return elem.selected;\r\n                    }\r\n                })\r\n                .map(function (elem) {\r\n                    if (elem.value) {\r\n                        return elem.value;\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    let filteredRecordsArray_7 = [];\r\n\r\n    if (\r\n        locationMarkLoc.checked ||\r\n        (filterConfigData.location_city_filter.length &&\r\n            !filterConfigData.location_visible)\r\n    ) {\r\n        if (selectedCity.length) {\r\n            let selectedDistance = 0;\r\n\r\n            selectedDistance = parseInt(locationDotLoc.value);\r\n\r\n            let lati;\r\n            let longi;\r\n            let min_lati;\r\n            let max_lati;\r\n            let min_longi;\r\n            let max_longi;\r\n\r\n            filteredRecordsArray_6.forEach((el, index) => {\r\n                if (el.city === selectedCity[0]) {\r\n                    lati = el.lati;\r\n                    longi = el.longi;\r\n\r\n                    min_lati = lati - selectedDistance * 0.009044;\r\n                    max_lati = lati + selectedDistance * 0.009044;\r\n                    min_longi =\r\n                        longi -\r\n                        (selectedDistance * 0.0089831) /\r\n                            Math.cos((lati * Math.PI) / 180);\r\n                    max_longi =\r\n                        longi +\r\n                        (selectedDistance * 0.0089831) /\r\n                            Math.cos((lati * Math.PI) / 180);\r\n                }\r\n            });\r\n\r\n            filteredRecordsArray_6.forEach((el, index) => {\r\n                let addFlag = false;\r\n\r\n                if (\r\n                    el.lati <= max_lati &&\r\n                    el.lati >= min_lati &&\r\n                    el.longi <= max_longi &&\r\n                    el.longi >= min_longi\r\n                ) {\r\n                    addFlag = true;\r\n                }\r\n\r\n                if (addFlag) {\r\n                    filteredRecordsArray_7.push(el);\r\n                }\r\n            });\r\n        } else {\r\n            filteredRecordsArray_7 = filteredRecordsArray_6;\r\n        }\r\n    } else {\r\n        filteredRecordsArray_7 = filteredRecordsArray_6;\r\n    }\r\n\r\n    // selectedRemote ////////////////\r\n\r\n    let filteredRecordsArray_8 = [];\r\n\r\n    if (\r\n        remoteLoc.checked ||\r\n        (filterConfigData.remote_filter && !filterConfigData.remote_visible)\r\n    ) {\r\n        filteredRecordsArray_7.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            if (el.remote) {\r\n                addFlag = true;\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_8.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_8 = filteredRecordsArray_7;\r\n    }\r\n\r\n    // selectedRelocation ////////////////\r\n\r\n    let filteredRecordsArray_9 = [];\r\n\r\n    if (relocationLoc.checked) {\r\n        filteredRecordsArray_8.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            if (el.relocation) {\r\n                addFlag = true;\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_9.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_9 = filteredRecordsArray_8;\r\n    }\r\n\r\n    // searchText ////////////////\r\n\r\n    let filteredRecordsArray_10 = [];\r\n\r\n    let searchText = searchInputLoc.value;\r\n\r\n    if (searchText) {\r\n        filteredRecordsArray_9.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            let position;\r\n\r\n            el.description.forEach(function (elem) {\r\n                if (elem.value && elem.field_id !== \"geolocation\") {\r\n                    position = elem.value\r\n                        .toLowerCase()\r\n                        .search(searchText.toLowerCase());\r\n                    if (position !== -1) {\r\n                        addFlag = true;\r\n                    }\r\n                }\r\n            });\r\n\r\n            position = el.name.toLowerCase().search(searchText.toLowerCase());\r\n            if (position !== -1) {\r\n                addFlag = true;\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_10.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_10 = filteredRecordsArray_9;\r\n    }\r\n\r\n    // selectedRecruitmentType (coloring of records) ////////////////\r\n    let selectedRecruitmentType = [];\r\n\r\n    if (filterConfigData.recruitmentType_filter.length) {\r\n        selectedRecruitmentType = filterConfigData.recruitmentType_filter;\r\n    }\r\n\r\n    let filteredRecordsArray_11 = [];\r\n\r\n    if (selectedRecruitmentType.length !== 0) {\r\n        filteredRecordsArray_10.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedRecruitmentType.forEach((selectedFiltr) => {\r\n                if (el.recruitmentType === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_11.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_11 = filteredRecordsArray_10;\r\n    }\r\n\r\n    recordsNumber = filteredRecordsArray_11.length;\r\n    summariseDownload(recordsNumber);\r\n    createRecordBoxes(filteredRecordsArray_11, 0, recordsOnPage);\r\n    setPages(recordsNumber);\r\n    filtersON = true;\r\n    hideFilter();\r\n};\r\n\r\nsearchBtn.addEventListener(\"click\", createFilteredRecordsArray);\r\n\r\n// COUNTRY & CITY LISTENER /////////////////////////////////////////////////////////////\r\n\r\nlocationMarkLoc.addEventListener(\"change\", function (e) {\r\n    if (e.target.checked) {\r\n        if (citiesLoc.value) {\r\n            locationSliderLoc.classList.remove(\"unactive\");\r\n            locationValuesLoc.classList.remove(\"unactive\");\r\n            locationDotLoc.disabled = false;\r\n        }\r\n\r\n        countriesLoc.disabled = false;\r\n        citiesLoc.disabled = false;\r\n    } else {\r\n        locationSliderLoc.classList.add(\"unactive\");\r\n        locationValuesLoc.classList.add(\"unactive\");\r\n        locationDotLoc.disabled = true;\r\n\r\n        countriesLoc.disabled = true;\r\n        citiesLoc.disabled = true;\r\n    }\r\n});\r\n\r\nfunction slideDistance() {\r\n    displayValDistance.textContent = locationDotLoc.value;\r\n}\r\n\r\nconst activateCities = () => {\r\n    citiesLoc.querySelectorAll(\"option\").forEach((el) => {\r\n        if (countriesLoc.value) {\r\n            if (\r\n                filterCountriesList[countriesLoc.value].findIndex(\r\n                    (sel_el) => sel_el.city === el.value\r\n                ) !== -1\r\n            ) {\r\n                el.classList.add(\"active\");\r\n            } else {\r\n                el.classList.remove(\"active\");\r\n            }\r\n        } else {\r\n            el.classList.add(\"active\");\r\n        }\r\n    });\r\n};\r\n\r\ncountriesLoc.addEventListener(\"change\", function () {\r\n    activateCities();\r\n\r\n    if (countriesLoc.value) {\r\n        if (\r\n            filterCountriesList[countriesLoc.value].find(\r\n                (el) => el.city !== citiesLoc.value\r\n            )\r\n        ) {\r\n            citiesLoc.value = filterCountriesList[countriesLoc.value][0].city;\r\n            locationSliderLoc.classList.remove(\"unactive\");\r\n            locationValuesLoc.classList.remove(\"unactive\");\r\n            locationDotLoc.disabled = false;\r\n        }\r\n    } else {\r\n        citiesLoc.value = citiesLoc[0].value;\r\n        locationSliderLoc.classList.add(\"unactive\");\r\n        locationValuesLoc.classList.add(\"unactive\");\r\n        locationDotLoc.disabled = true;\r\n    }\r\n});\r\n\r\ncitiesLoc.addEventListener(\"change\", function () {\r\n    Object.keys(filterCountriesList).find((key) => {\r\n        if (\r\n            filterCountriesList[key].findIndex(\r\n                (sel_el) => sel_el.city === citiesLoc.value\r\n            ) !== -1\r\n        ) {\r\n            if (countriesLoc.value !== key) {\r\n                countriesLoc.value = key;\r\n                activateCities();\r\n            }\r\n        }\r\n    });\r\n    if (!citiesLoc.value) {\r\n        locationSliderLoc.classList.add(\"unactive\");\r\n        locationValuesLoc.classList.add(\"unactive\");\r\n        locationDotLoc.disabled = true;\r\n    } else {\r\n        locationSliderLoc.classList.remove(\"unactive\");\r\n        locationValuesLoc.classList.remove(\"unactive\");\r\n        locationDotLoc.disabled = false;\r\n    }\r\n});\r\n\r\n// SALARY LISTENER ////////////////////////////////////////////////////////////////////\r\n\r\nlet minGap = 0;\r\n\r\nfunction slideOne() {\r\n    if (parseInt(sliderTwo.value) - parseInt(sliderOne.value) <= minGap) {\r\n        sliderOne.value = parseInt(sliderTwo.value) - minGap;\r\n    }\r\n    displayValOne.textContent = sliderOne.value;\r\n\r\n    if (sliderOne.value === sliderTwo.value) {\r\n        sliderOne.style.zIndex = \"1\";\r\n    } else {\r\n        sliderOne.style.zIndex = \"0\";\r\n    }\r\n\r\n    fillColor();\r\n}\r\n\r\nfunction slideTwo() {\r\n    if (parseInt(sliderTwo.value) - parseInt(sliderOne.value) <= minGap) {\r\n        sliderTwo.value = parseInt(sliderOne.value) + minGap;\r\n    }\r\n    displayValTwo.textContent = sliderTwo.value;\r\n    if (displayValTwo.textContent === \"100000\") {\r\n        salaryMarkLoc.disabled = true;\r\n        displayValOne.textContent = \"\";\r\n        displayValTwo.textContent = \"\";\r\n        pauseLoc.textContent = \"\";\r\n    }\r\n    fillColor();\r\n}\r\n\r\nfunction fillColor() {\r\n    percent1 =\r\n        ((sliderOne.value - sliderOne.min) / (sliderOne.max - sliderOne.min)) *\r\n        100;\r\n    percent2 =\r\n        ((sliderTwo.value - sliderOne.min) / (sliderOne.max - sliderOne.min)) *\r\n        100;\r\n    sliderTrack.style.background = `linear-gradient(to right, #dadae5 ${percent1}%, #fe7320ff ${percent1}%, #fe7320ff ${percent2}%, #dadae5 ${percent2}%)`;\r\n}\r\n\r\nsliderOne.value = filterMaxSalary.toString();\r\nsliderTwo.value = filterMinSalary.toString();\r\n\r\nsalaryMarkLoc.addEventListener(\"change\", function (e) {\r\n    if (e.target.checked) {\r\n        salarySliderLoc.classList.remove(\"unactive\");\r\n        salaryValuesLoc.classList.remove(\"unactive\");\r\n        sliderOne.disabled = false;\r\n        sliderTwo.disabled = false;\r\n    } else {\r\n        salarySliderLoc.classList.add(\"unactive\");\r\n        salaryValuesLoc.classList.add(\"unactive\");\r\n        sliderOne.disabled = true;\r\n        sliderTwo.disabled = true;\r\n    }\r\n});\r\n\r\nconst changePage = (pageBtn) => {\r\n    pageButtonsLoc.forEach((el) => {\r\n        el.classList.remove(\"active\");\r\n    });\r\n    pageBtn.classList.add(\"active\");\r\n    let firstRecord =\r\n        recordsOnPage * parseInt(pageBtn.innerText) - recordsOnPage;\r\n    let lastRecord = recordsOnPage * parseInt(pageBtn.innerText);\r\n    filtersON\r\n        ? createRecordBoxes(filteredRecordsArray_11, firstRecord, lastRecord)\r\n        : createRecordBoxes(allRecordsArray, firstRecord, lastRecord);\r\n    globActivePageNo = parseInt(pageBtn.innerText);\r\n};\r\n\r\nlet globActivePageNo;\r\n\r\nconst movePrevPagesBtns = () => {\r\n    let firstDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).shift().innerText\r\n    );\r\n    let lastDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).pop().innerText\r\n    );\r\n\r\n    let activePageNo;\r\n    activePageNo = document.querySelector(\".page.active\");\r\n\r\n    if (activePageNo) {\r\n        activePageNo = parseInt(activePageNo.innerText);\r\n    }\r\n\r\n    if (firstDispalyedPageNo > 1) {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (n = firstDispalyedPageNo - 1; n <= lastDispalyedPageNo - 1; n++) {\r\n            if (!activePageNo) {\r\n                activePageNo = globActivePageNo;\r\n            }\r\n            if (activePageNo && n === activePageNo) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n\r\n        if (lastDispalyedPageNo < pagesQuantityCalc + 1) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next active\"><img src=\"./img/chevron-right.svg\" alt=\"\" /></div>`\r\n            );\r\n            let nextBtnLoc = document.querySelector(\".next\");\r\n            nextBtnLoc.addEventListener(\"click\", () => {\r\n                moveNextPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        if (firstDispalyedPageNo > 2) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev active\"><img src=\"./img/chevron-left.svg\" alt=\"\" /></div>`\r\n            );\r\n            let prevBtnLoc = document.querySelector(\".prev\");\r\n            prevBtnLoc.addEventListener(\"click\", () => {\r\n                movePrevPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        pageButtonsLoc = document.querySelectorAll(\".page\");\r\n        pageButtonsLoc.forEach((el) => {\r\n            el.addEventListener(\"click\", (e) => {\r\n                changePage(e.target);\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nconst moveNextPagesBtns = () => {\r\n    let firstDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).shift().innerText\r\n    );\r\n    let lastDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).pop().innerText\r\n    );\r\n\r\n    let activePageNo;\r\n    activePageNo = document.querySelector(\".page.active\");\r\n    if (activePageNo) {\r\n        activePageNo = parseInt(activePageNo.innerText);\r\n        globActivePageNo = activePageNo;\r\n    }\r\n\r\n    if (lastDispalyedPageNo < pagesQuantityCalc) {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (n = firstDispalyedPageNo + 1; n <= lastDispalyedPageNo + 1; n++) {\r\n            if (!activePageNo) {\r\n                activePageNo = globActivePageNo;\r\n            }\r\n            if (activePageNo && n === activePageNo) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n\r\n        if (lastDispalyedPageNo < pagesQuantityCalc - 1) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next active\"><img src=\"./img/chevron-right.svg\" alt=\"\" /></div>`\r\n            );\r\n            let nextBtnLoc = document.querySelector(\".next\");\r\n            nextBtnLoc.addEventListener(\"click\", () => {\r\n                moveNextPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        if (firstDispalyedPageNo > 0) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev active\"><img src=\"./img/chevron-left.svg\" alt=\"\" /></div>`\r\n            );\r\n            let prevBtnLoc = document.querySelector(\".prev\");\r\n            prevBtnLoc.addEventListener(\"click\", () => {\r\n                movePrevPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        pageButtonsLoc = document.querySelectorAll(\".page\");\r\n        pageButtonsLoc.forEach((el) => {\r\n            el.addEventListener(\"click\", (e) => {\r\n                changePage(e.target);\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nfunction getWidth() {\r\n    return Math.max(\r\n        document.body.scrollWidth,\r\n        document.documentElement.scrollWidth,\r\n        document.body.offsetWidth,\r\n        document.documentElement.offsetWidth,\r\n        document.documentElement.clientWidth\r\n    );\r\n}\r\n\r\nfunction getHeight() {\r\n    return Math.max(\r\n        document.body.scrollHeight,\r\n        document.documentElement.scrollHeight,\r\n        document.body.offsetHeight,\r\n        document.documentElement.offsetHeight,\r\n        document.documentElement.clientHeight\r\n    );\r\n}\r\n\r\nlet maxPageBtns;\r\n\r\nif (getWidth() < 500) {\r\n    maxPageBtns = 6;\r\n}\r\nif (getWidth() >= 500 && getWidth() < 700) {\r\n    maxPageBtns = 8;\r\n}\r\nif (getWidth() > 700 && getWidth() < 900) {\r\n    maxPageBtns = 10;\r\n}\r\nif (getWidth() > 900 && getWidth() < 1024) {\r\n    maxPageBtns = 15;\r\n}\r\nif (getWidth() > 1024) {\r\n    maxPageBtns = 20;\r\n}\r\n\r\nlet pagesQuantityCalc;\r\n\r\nconst setPages = (recordsNumber) => {\r\n    pagesQuantityCalc = Math.ceil(recordsNumber / recordsOnPage);\r\n\r\n    if (pagesQuantityCalc >= maxPageBtns) {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (n = 1; n <= maxPageBtns; n++) {\r\n            if (n === 1) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n        pagesSwitchLoc.insertAdjacentHTML(\r\n            \"beforeend\",\r\n            `<div class=\"next active\"><img src=\"./img/chevron-right.svg\" alt=\"\" /></div>`\r\n        );\r\n        let nextBtnLoc = document.querySelector(\".next\");\r\n        nextBtnLoc.addEventListener(\"click\", () => {\r\n            moveNextPagesBtns();\r\n        });\r\n    } else {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (n = 1; n <= pagesQuantityCalc; n++) {\r\n            if (n === 1) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n\r\n        pagesSwitchLoc.insertAdjacentHTML(\r\n            \"beforeend\",\r\n            `<div class=\"next\"><img src=\"\" alt=\"\" /></div>`\r\n        );\r\n    }\r\n\r\n    pagesSwitchLoc.insertAdjacentHTML(\r\n        \"afterbegin\",\r\n        `<div class=\"prev\"><img src=\"\" alt=\"\" /></div>`\r\n    );\r\n\r\n    pageButtonsLoc = document.querySelectorAll(\".page\");\r\n    pageButtonsLoc.forEach((el) => {\r\n        el.addEventListener(\"click\", (e) => {\r\n            changePage(e.target);\r\n        });\r\n    });\r\n};\r\n\r\n// change RECORDS QUANTITY ON PAGE //////////////////////////////////////////////////\r\n\r\nrecordsOnPageLoc.addEventListener(\"change\", (e) => {\r\n    recordsOnPage = parseInt(e.target.value);\r\n\r\n    filtersON\r\n        ? createRecordBoxes(filteredRecordsArray_11, 0, recordsOnPage)\r\n        : createRecordBoxes(allRecordsArray, 0, recordsOnPage);\r\n    setPages(recordsNumber);\r\n});\r\n\r\nconst clearFilters = () => {\r\n    searchInputLoc.value = \"\";\r\n    window.location.reload();\r\n};\r\n\r\nclearFiltersLoc.addEventListener(\"click\", clearFilters);\r\n\r\nclearFilterLoc.forEach((elemFiltr) => {\r\n    elemFiltr.addEventListener(\"click\", () => {\r\n        let optArray = elemFiltr.nextElementSibling.querySelectorAll(\"option\");\r\n        optArray.forEach((elOpt) => {\r\n            if (elOpt.selected) {\r\n                elOpt.selected = false;\r\n            }\r\n        });\r\n    });\r\n});\r\n\r\n// Determine the mobile operating system.\r\n\r\nfunction getMobileOperatingSystem() {\r\n    var userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n\r\n    if (/android/i.test(userAgent)) {\r\n        return \"Android\";\r\n    }\r\n\r\n    if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\r\n        return \"iOS\";\r\n    }\r\n\r\n    return \"unknown\";\r\n}\r\n"]}