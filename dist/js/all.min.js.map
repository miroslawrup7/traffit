{"version":3,"sources":["main.js"],"names":["recNumLoc","document","querySelector","noResultsLoc","resultsLoc","awardedResultsLoc","pagesContainer","pagesSwitchLoc","pageButtonsLoc","querySelectorAll","dropDownFilterLoc","dropDownLoc","dropDownBtnLoc","moreFiltersLoc","lessFiltersLoc","recordsOnPageLoc","branchesLoc","jobFormLoc","jobTypeLoc","langLoc","countriesLoc","citiesLoc","locationMarkLoc","locationDotLoc","locationSliderLoc","locationValuesLoc","displayValDistance","getElementById","salaryMarkLoc","salarySliderLoc","salaryValuesLoc","sliderOne","sliderTwo","displayValOne","displayValTwo","sliderTrack","pauseLoc","remoteLoc","relocationLoc","searchInputLoc","searchBtn","clearFiltersLoc","clearFilterLoc","apiPage","rawAPIArray","allRecordsArray","filterBranchesList","filterJobFormList","filterJobTypeList","filterLangList","filterMinSalary","filterMaxSalary","filterCountriesList","recordsNumber","firstRecordNumber","recordsOnPage","filterListMaxHeight","filtersON","filteredRecordsArray_10","value","checked","disabled","createDataForFilters","branche","jobForm","jobType","lang","visibleRate","salaryFrom","salaryTo","country","city","lati","longi","indexOf","undefined","push","forEach","elem","findIndex","arr_el","reworkData","el","options","job_location","parsedJobLocation","JSON","parse","url","name","advert","branches","language","job_type","parseInt","_Widoczna_stawka","_spodziewane_wynagrodzenie_od","_spodziewane_wynagrodzenie_do","remote","relocation","_relokacja","recruitmentType","_rekrutacja_rodzaj","_forma_zatrudnienia","locality","parseFloat","latitude","longitude","description","values","awarded","summariseDownload","innerText","classList","remove","add","dropDownBtnStart","addEventListener","toggle","contains","style","maxHeight","String","pagesContainerStart","createRecordBoxes","recordsArray","replaceChildren","i","borderColorClass","textColorClass","formaZatrudnienia","insertAdjacentHTML","createAwardedRecordBoxes","awardedRecordsArray","filter","getAPI","fetch","mode","headers","loopOnAPI","jsonData","length","concat","createRecordsObjFromAPI","setPages","createFilterLists","async","rawData","json","sort","a","b","localeCompare","rowHeight","height","Object","keys","compare","key","reduce","accumulator","allCitiesObj","allCitiesArray","min","toString","max","slideOne","slideTwo","createFilteredRecordsArray","branchesChildrenLoc","jobFormChildrenLoc","jobTypeChildrenLoc","langChildrenLoc","countriesChildrenLoc","citiesChildrenLoc","filteredRecordsArray","selectedBranches","Array","from","selected","map","filteredRecordsArray_1","index","addFlag","selectedFiltr","selectedJobForms","filteredRecordsArray_2","selectedjobTypes","filteredRecordsArray_3","selectedValOne","selectedValTwo","selectedLangs","filteredRecordsArray_4","filteredRecordsArray_5","selectedCountry","filteredRecordsArray_6","selectedCity","filteredRecordsArray_7","min_lati","max_lati","min_longi","max_longi","selectedDistance","Math","cos","PI","filteredRecordsArray_8","filteredRecordsArray_9","searchText","position","field_id","toLowerCase","search","slideDistance","textContent","e","target","activateCities","sel_el","find","minGap","zIndex","fillColor","percent1","percent2","background","changePage","pageBtn","firstRecord","lastRecord","pagesQuantity","ceil","n","clearFilters","window","location","reload","elemFiltr","nextElementSibling","elOpt"],"mappings":"AAAA,MAAAA,UAAAC,SAAAC,cAAA,mBACAC,aAAAF,SAAAC,cAAA,eACAE,WAAAH,SAAAC,cAAA,YACAG,kBAAAJ,SAAAC,cAAA,YACAI,eAAAL,SAAAC,cAAA,oBACAK,eAAAN,SAAAC,cAAA,UACA,IAAAM,eAAAP,SAAAQ,iBAAA,SAEA,MAAAC,kBAAAT,SAAAC,cAAA,sBACAS,YAAAV,SAAAC,cAAA,kBACAU,eAAAX,SAAAC,cAAA,sBACAW,eAAAZ,SAAAC,cAAA,iBACAY,eAAAb,SAAAC,cAAA,iBAEAa,iBAAAd,SAAAC,cAAA,oBAEAc,YAAAf,SAAAC,cAAA,aACAe,WAAAhB,SAAAC,cAAA,aACAgB,WAAAjB,SAAAC,cAAA,aACAiB,QAAAlB,SAAAC,cAAA,SACAkB,aAAAnB,SAAAC,cAAA,cACAmB,UAAApB,SAAAC,cAAA,WAEAoB,gBAAArB,SAAAC,cAAA,iBACAqB,eAAAtB,SAAAC,cAAA,eACAsB,kBAAAvB,SAAAC,cACA,iDAEAuB,kBAAAxB,SAAAC,cACA,mCAEAwB,mBAAAzB,SAAA0B,eAAA,UAEAC,cAAA3B,SAAAC,cAAA,gBACA2B,gBAAA5B,SAAAC,cACA,wCAEA4B,gBAAA7B,SAAAC,cAAA,0BACA6B,UAAA9B,SAAAC,cAAA,aACA8B,UAAA/B,SAAAC,cAAA,aACA+B,cAAAhC,SAAA0B,eAAA,UACAO,cAAAjC,SAAA0B,eAAA,UACAQ,YAAAlC,SAAAC,cAAA,yBACAkC,SAAAnC,SAAAC,cAAA,kBAEAmC,UAAApC,SAAAC,cAAA,WACAoC,cAAArC,SAAAC,cAAA,eAEAqC,eAAAtC,SAAAC,cAAA,uBAEAsC,UAAAvC,SAAAC,cAAA,eAEAuC,gBAAAxC,SAAAC,cAAA,kBACAwC,eAAAzC,SAAAQ,iBAAA,4BAEA,IAAAkC,QAAA,EACAC,YAAA,GACAC,gBAAA,GAEAC,mBAAA,GACAC,kBAAA,GACAC,kBAAA,GACAC,eAAA,GACAC,gBAAA,IACAC,gBAAA,EACAC,oBAAA,GAEAC,cAAA,EACAC,kBAAA,EACAC,cAAA,GAEAC,oBAAA,EAEAC,WAAA,EACAC,wBAAA,GAEAnB,eAAAoB,MAAA,GACA5C,iBAAA4C,MAAA,GAEArC,gBAAAsC,SAAA,EACArC,eAAAsC,UAAA,EACAzC,aAAAyC,UAAA,EACAxC,UAAAwC,UAAA,EACAtC,eAAAoC,MAAA,EAEA/B,cAAAgC,SAAA,EACA7B,UAAA8B,UAAA,EACA7B,UAAA6B,UAAA,EAEAxB,UAAAuB,SAAA,EACAtB,cAAAsB,SAAA,EAGA,MAAAE,qBAAA,CACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,MAEA,IAAA3B,mBAAA4B,QAAAX,SAAAY,IAAAZ,GACAjB,mBAAA8B,KAAAb,GAEAC,GACAA,EAAAa,SAAA,SAAAC,IACA,IAAA/B,kBAAA2B,QAAAI,IACA/B,kBAAA6B,KAAAE,OAIA,IAAA9B,kBAAA0B,QAAAT,SAAAU,IAAAV,GACAjB,kBAAA4B,KAAAX,IAEA,IAAAhB,eAAAyB,QAAAR,IACAjB,eAAA2B,KAAAV,GAEAC,IACAC,EAAAlB,kBACAA,gBAAAkB,GAEAC,EAAAlB,kBACAA,gBAAAkB,IAGAjB,oBAAAkB,IAIA,IAFAlB,oBAAAkB,GAAAS,WACAC,GAAAA,EAAAT,OAAAA,KAGAnB,oBAAAkB,GAAAM,KAAA,CACAL,KAAAA,EACAC,KAAAA,EACAC,MAAAA,KAIArB,oBAAAkB,GAAA,GACAlB,oBAAAkB,GAAAM,KAAA,CACAL,KAAAA,EACAC,KAAAA,EACAC,MAAAA,MAMAQ,WAAArC,IACAA,EAAAiC,SAAAK,IA7DA,IACAnB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAmDAS,EAAAC,QAAAC,eACAC,kBAAAC,KAAAC,MAAAL,EAAAC,QAAAC,eAGAvC,gBAAA+B,KAAA,CACAY,IAAAN,EAAAM,IACAC,KAAAP,EAAAQ,OAAAD,KACA1B,QAAAmB,EAAAC,QAAAQ,SACAzB,KAAAgB,EAAAQ,OAAAE,SACA3B,QAAAiB,EAAAC,QAAAU,SACA1B,YAAA2B,SAAAZ,EAAAC,QAAAY,kBACA3B,WAAA0B,SAAAZ,EAAAC,QAAAa,+BACA3B,SAAAyB,SAAAZ,EAAAC,QAAAc,+BACAC,OAAAhB,EAAAC,QAAAe,OACAC,WAAAjB,EAAAC,QAAAiB,WACAC,gBAAAnB,EAAAC,QAAAmB,mBACAtC,QAAAkB,EAAAC,QAAAoB,oBACAjC,QAAAe,kBAAAf,QACAC,KAAAc,kBAAAmB,SACAhC,KAAAiC,WAAApB,kBAAAqB,UACAjC,MAAAgC,WAAApB,kBAAAsB,WACAC,YAAA1B,EAAAQ,OAAAmB,OACAC,QAAA5B,EAAA4B,UAnFA/C,EAuFAmB,EAAAC,QAAAQ,SAtFA3B,EAuFAkB,EAAAC,QAAAoB,oBAtFAtC,EAuFAiB,EAAAC,QAAAU,SAtFA3B,EAuFAgB,EAAAQ,OAAAE,SAtFAzB,EAuFA2B,SAAAZ,EAAAC,QAAAY,kBAtFA3B,EAuFA0B,SAAAZ,EAAAC,QAAAa,+BAtFA3B,EAuFAyB,SAAAZ,EAAAC,QAAAc,+BAtFA3B,EAuFAe,kBAAAf,QAtFAC,EAuFAc,kBAAAmB,SAtFAhC,EAuFAiC,WAAApB,kBAAAqB,UAtFAjC,EAuFAgC,WAAApB,kBAAAsB,YArFA,IAAA7D,mBAAA4B,QAAAX,SAAAY,IAAAZ,GACAjB,mBAAA8B,KAAAb,GAEAC,GACAA,EAAAa,SAAA,SAAAC,IACA,IAAA/B,kBAAA2B,QAAAI,IACA/B,kBAAA6B,KAAAE,OAIA,IAAA9B,kBAAA0B,QAAAT,SAAAU,IAAAV,GACAjB,kBAAA4B,KAAAX,IAEA,IAAAhB,eAAAyB,QAAAR,IACAjB,eAAA2B,KAAAV,GAEAC,IACAC,EAAAlB,kBACAA,gBAAAkB,GAEAC,EAAAlB,kBACAA,gBAAAkB,IAGAjB,oBAAAkB,IAIA,IAFAlB,oBAAAkB,GAAAS,WACAC,GAAAA,EAAAT,OAAAA,KAGAnB,oBAAAkB,GAAAM,KAAA,CACAL,KAAAA,EACAC,KAAAA,EACAC,MAAAA,KAIArB,oBAAAkB,GAAA,GACAlB,oBAAAkB,GAAAM,KAAA,CACAL,KAAAA,EACAC,KAAAA,EACAC,MAAAA,SAmDAsC,kBAAA1D,IACArD,UAAAgH,UAAA,cAAA3D,aACAA,EAGAlD,aAAA8G,UAAAC,OAAA,UAFA/G,aAAA8G,UAAAE,IAAA,WAQAC,iBAAA,KACAzG,YAAA0G,iBAAA,SAAA,KACAzG,eAAAqG,UAAAK,OAAA,MACA5G,kBAAAuG,UAAAM,SAAA,SACA7G,kBAAAuG,UAAAC,OAAA,QACAxG,kBAAA8G,MAAAC,UAAAC,OAAA,GAAA,KACA7G,eAAAoG,UAAAC,OAAA,QACApG,eAAAmG,UAAAC,OAAA,UAEAxG,kBAAAuG,UAAAE,IAAA,QACAzG,kBAAA8G,MAAAC,UAAA,SACA5G,eAAAoG,UAAAE,IAAA,QACArG,eAAAmG,UAAAE,IAAA,YAIAxG,YAAAsG,UAAAE,IAAA,WAGAQ,oBAAA,KACArH,eAAA2G,UAAAE,IAAA,WAKAS,kBAAA,CAAAC,EAAAvE,EAAAC,KAGA,IAFAnD,WAAA0H,kBAEAC,EAAAzE,EAAAyE,EAAAxE,EAAAwE,IAGA,GAAAF,EAAAE,GAAA,CACA,IAAAC,EAAA,GACAC,EAAA,GAEA,OAAAJ,EAAAE,GAAA1B,kBACA2B,EAAA,YACAC,EAAA,WAEA,OAAAJ,EAAAE,GAAA1B,kBACA2B,EAAA,YACAC,EAAA,WAEA,QAAAJ,EAAAE,GAAA1B,kBACA2B,EAAA,aACAC,EAAA,YAGA,IAAAC,EAAA,GAEAL,EAAAE,GAAA/D,SACA6D,EAAAE,GAAA/D,QAAAa,SAAA,SAAAC,GACAoD,EACAA,EAAA,MAAApD,EAAA,UAIA1E,WAAA+H,mBACA,YACA,YACAN,EAAAE,GAAAvC,2CACAwC,gGAGAH,EAAAE,GAAA7D,gHAGA2D,EAAAE,GAAAhE,QACA8D,EAAAE,GAAAhE,QACA,sDAEAkE,MACAJ,EAAAE,GAAAtC,0PAUAoC,EAAAE,GAAAxD,oHAKAsD,EAAAE,GAAA9D,QACA,wBACA4D,EAAAE,GAAA9D,QACA,SACA,2BAGA4D,EAAAE,GAAA5D,aACA0D,EAAAE,GAAA3D,YACAyD,EAAAE,GAAA1D,SACA,uBACAwD,EAAAE,GAAA3D,WACA,MACAyD,EAAAE,GAAA1D,SACA,SAEA,2BAGAwD,EAAAE,GAAA7B,OACA,mCACA,2BAGA2B,EAAAE,GAAA5B,WACA,2CACA,uDAEA+B,gJAeAE,yBAAAP,IACAxH,kBAAAyH,kBAEA,IAAAO,EAAAR,EAAAS,QAAAxD,GACAA,EAAAgC,UAGA,IAAAiB,EAAAzE,kBAAAyE,EAAA,GAAAA,IACA,GAAAM,EAAAN,GAAA,CACA,IAAAC,EAAA,GACAC,EAAA,GAEA,OAAAI,EAAAN,GAAA1B,kBACA2B,EAAA,YACAC,EAAA,WAEA,OAAAI,EAAAN,GAAA1B,kBACA2B,EAAA,YACAC,EAAA,WAEA,QAAAI,EAAAN,GAAA1B,kBACA2B,EAAA,aACAC,EAAA,YAGA,IAAAC,EAAA,GAEAG,EAAAN,GAAA/D,SACAqE,EAAAN,GAAA/D,QAAAa,SAAA,SAAAC,GACAoD,EACAA,EAAA,MAAApD,EAAA,UAIAzE,kBAAA8H,mBACA,YACA,YACAE,EAAAN,GAAAvC,2CACAwC,2HAIAK,EAAAN,GAAA7D,sIAIAmE,EAAAN,GAAAhE,QACAsE,EAAAN,GAAAhE,QACA,sDAEAkE,MACAI,EAAAN,GAAAtC,2OASA4C,EAAAN,GAAAxD,8FAIA8D,EAAAN,GAAA7B,OACA,mCACA,2BAGAmC,EAAAN,GAAA5B,WACA,2CACA,2BAGAkC,EAAAN,GAAA9D,QACA,wBACAoE,EAAAN,GAAA9D,QACA,SACA,2BAGAoE,EAAAN,GAAA5D,aACAkE,EAAAN,GAAA3D,YACAiE,EAAAN,GAAA1D,SACA,uBACAgE,EAAAN,GAAA3D,WACA,MACAiE,EAAAN,GAAA1D,SACA,SAEA,uDAEA6D,qdAwBAK,OAAA5F,GACA6F,MACA,8DAEA,CACAC,KAAA,OACAC,QAAA,CACA,eAAA,mBACA,sBAAA,MACA,yBAAA/F,EACA,iBAAA,2CAQAgG,UAAAC,IACAA,EAAAC,OAAA,GAEAjG,YAAAA,YAAAkG,OAAAF,GAEAjG,UACAoG,wBAAApG,WAGAsC,WAAArC,aACAS,cAAAT,YAAAiG,OACA9B,kBAAA1D,eACAuE,kBAAA/E,gBAAAS,kBAAAC,eACA6E,yBAAAvF,iBACAmG,SAAA3F,eACA4F,oBAtRAtI,YAAA0G,iBAAA,SAAA,KACAzG,eAAAqG,UAAAK,OAAA,MACA5G,kBAAAuG,UAAAM,SAAA,SACA7G,kBAAAuG,UAAAC,OAAA,QACAxG,kBAAA8G,MAAAC,UAAAC,OAAA,GAAA,KACA7G,eAAAoG,UAAAC,OAAA,QACApG,eAAAmG,UAAAC,OAAA,UAEAxG,kBAAAuG,UAAAE,IAAA,QACAzG,kBAAA8G,MAAAC,UAAA,SACA5G,eAAAoG,UAAAE,IAAA,QACArG,eAAAmG,UAAAE,IAAA,YAIAxG,YAAAsG,UAAAE,IAAA,UAIA7G,eAAA2G,UAAAE,IAAA,YAyQA+B,eAAAH,wBAAApG,GACA,MAAAwG,QAAAZ,OAAA5F,GACAiG,QAAAO,EAAAC,OACAT,UAAAC,GAGAG,wBAAApG,SAIA,MAAAsG,kBAAA,KA0DA,GAzDAnG,mBAAA+F,OAAA,IACA/F,mBAAAuG,MAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAE,cAAAD,MAEAE,UAAA,GAAA3G,mBAAA+F,OAAA,EACArF,oBAAAiG,UACAzI,YAAAwG,MAAAkC,OAAAhC,OAAA+B,WAAA,KACA3G,mBAAA+B,SAAA,SAAAK,GACAlE,YAAAmH,mBACA,YACA,kBAAAjD,MAAAA,kBAKAnC,kBAAA8F,OAAA,IACA9F,kBAAAsG,MAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAE,cAAAD,MAEAE,UAAA,GAAA1G,kBAAA8F,OAAA,EACA5H,WAAAuG,MAAAkC,OAAAhC,OAAA+B,WAAA,KACA1G,kBAAA8B,SAAA,SAAAK,GACAjE,WAAAkH,mBACA,YACA,kBAAAjD,MAAAA,kBAKAlC,kBAAA6F,OAAA,IACA7F,kBAAAqG,MAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAE,cAAAD,MAEAE,UAAA,GAAAzG,kBAAA6F,OAAA,EACA3H,WAAAsG,MAAAkC,OAAAhC,OAAA+B,WAAA,KACAzG,kBAAA6B,SAAA,SAAAK,GACAhE,WAAAiH,mBACA,YACA,kBAAAjD,MAAAA,kBAKAjC,eAAA4F,OAAA,IACA5F,eAAAoG,MAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAE,cAAAD,MAEAE,UAAA,GAAAxG,eAAA4F,OAAA,EACA1H,QAAAqG,MAAAkC,OAAAhC,OAAA+B,WAAA,KACAxG,eAAA4B,SAAA,SAAAK,GACA/D,QAAAgH,mBACA,YACA,kBAAAjD,MAAAA,kBAKAyE,OAAAC,KAAAxG,qBAAAyF,OAAA,EAAA,CAWA,SAAAgB,EAAAP,EAAAC,GACA,OAAAD,EAAA/E,KAAAiF,cAAAD,EAAAhF,MAXAnD,aAAA+G,mBACA,YACA,yDAGA9G,UAAA8G,mBACA,YACA,wDAOA,IAAA,IAAA2B,KAAA1G,oBACAA,oBAAA0G,GAAAT,KAAAQ,GAGAzG,oBAAAuG,OAAAC,KAAAxG,qBACAiG,OACAU,QAAA,CAAAC,EAAAF,KACAE,EAAAF,GAAA1G,oBAAA0G,GACAE,IACA,IAEA,IAAAC,EAAA,GACA,IAAA,IAAAH,KAAA1G,oBACAhC,aAAA+G,mBACA,YACA,kBAAA2B,MAAAA,cAEAG,EAAAA,EAAAnB,OAAA1F,oBAAA0G,IAGA,IAAAI,EAAA,GACAD,EAAApF,SAAAK,IACAgF,EAAAtF,KAAAM,EAAAX,SAGA2F,EAAAb,MAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAE,cAAAD,MAGAW,EAAArF,SAAA,SAAAK,GACA7D,UAAA8G,mBACA,YACA,kBAAAjD,qBAAAA,kBAKAnD,UAAAoI,IAAAjH,gBAAAkH,WACApI,UAAAmI,IAAAjH,gBAAAkH,WACArI,UAAAsI,IAAAlH,gBAAAiH,WACApI,UAAAqI,IAAAlH,gBAAAiH,WACArI,UAAA4B,MAAAT,gBAAAkH,WACApI,UAAA2B,MAAAR,gBAAAiH,WACAE,WACAC,YAKAC,2BAAA,KACA,MAAAC,EAAAxK,SAAAQ,iBAAA,oBACAiK,EAAAzK,SAAAQ,iBAAA,oBACAkK,EAAA1K,SAAAQ,iBAAA,oBACAmK,EAAA3K,SAAAQ,iBAAA,gBACAoK,EAAA5K,SAAAQ,iBAAA,qBACAqK,EAAA7K,SAAAQ,iBAAA,kBAEA,IAAAsK,EAAAlI,gBAIAmI,EAAAC,MAAAC,KAAAT,GACAnC,QAAA,SAAAxD,GACA,OAAAA,EAAAqG,YAEAC,KAAA,SAAAtG,GACA,OAAAA,EAAAnB,SAGA0H,EAAA,GAEA,IAAAL,EAAAnC,OACAkC,EAAAlG,SAAA,CAAAK,EAAAoG,KACA,IAAAC,GAAA,EAEAP,EAAAnG,SAAA2G,IACAtG,EAAAnB,UAAAyH,IACAD,GAAA,MAIAA,GACAF,EAAAzG,KAAAM,MAIAmG,EAAAN,EAKA,IAAAU,EAAAR,MAAAC,KAAAR,GACApC,QAAA,SAAAxD,GACA,OAAAA,EAAAqG,YAEAC,KAAA,SAAAtG,GACA,OAAAA,EAAAnB,SAGA+H,EAAA,GAEA,IAAAD,EAAA5C,OACAwC,EAAAxG,SAAA,CAAAK,EAAAoG,KACA,GAAApG,EAAAlB,QAAA,CACA,IAAAuH,GAAA,EAEAE,EAAA5G,SAAA2G,KACA,IAAAtG,EAAAlB,QAAAU,QAAA8G,KACAD,GAAA,MAIAA,GACAG,EAAA9G,KAAAM,OAKAwG,EAAAL,EAKA,IAAAM,EAAAV,MAAAC,KAAAP,GACArC,QAAA,SAAAxD,GACA,OAAAA,EAAAqG,YAEAC,KAAA,SAAAtG,GACA,OAAAA,EAAAnB,SAGAiI,EAAA,GAEA,IAAAD,EAAA9C,OACA6C,EAAA7G,SAAA,CAAAK,EAAAoG,KACA,IAAAC,GAAA,EAEAI,EAAA9G,SAAA2G,IACAtG,EAAAjB,UAAAuH,IACAD,GAAA,MAIAA,GACAK,EAAAhH,KAAAM,MAIA0G,EAAAF,EAKA,IA8BAG,EACAC,EA/BAC,EAAAd,MAAAC,KAAAN,GACAtC,QAAA,SAAAxD,GACA,OAAAA,EAAAqG,YAEAC,KAAA,SAAAtG,GACA,OAAAA,EAAAnB,SAGAqI,EAAA,GAEA,IAAAD,EAAAlD,OACA+C,EAAA/G,SAAA,CAAAK,EAAAoG,KACA,IAAAC,GAAA,EAEAQ,EAAAlH,SAAA2G,IACAtG,EAAAhB,OAAAsH,IACAD,GAAA,MAIAA,GACAS,EAAApH,KAAAM,MAIA8G,EAAAJ,EAOAhK,cAAAgC,UACAiI,EAAA/F,SAAA7D,cAAA+E,WACA8E,EAAAhG,SAAA5D,cAAA8E,YAGA,IAAAiF,EAAA,GAEArK,cAAAgC,QACAoI,EAAAnH,SAAA,CAAAK,EAAAoG,KACA,IAAAC,GAAA,EAEArG,EAAAf,cACAe,EAAAb,UAAAa,EAAAd,YAEAc,EAAAb,UAAAwH,GACA3G,EAAAd,YAAA0H,IAEAP,GAAA,GAGArG,EAAAb,WAAAa,EAAAd,YACAc,EAAAb,UAAAwH,IACAN,GAAA,IAGArG,EAAAb,UAAAa,EAAAd,YACAc,EAAAd,YAAA0H,IACAP,GAAA,IAKAA,GACAU,EAAArH,KAAAM,MAIA+G,EAAAD,EAKA,IAAAE,EAAA,GAEA5K,gBAAAsC,UACAsI,EAAAjB,MAAAC,KAAAL,GACAvC,QAAA,SAAAxD,GACA,GAAAA,EAAAnB,MACA,OAAAmB,EAAAqG,YAGAC,KAAA,SAAAtG,GACA,GAAAA,EAAAnB,MACA,OAAAmB,EAAAnB,UAKA,IAAAwI,EAAA,GAEA7K,gBAAAsC,SACAsI,EAAArD,OACAoD,EAAApH,SAAA,CAAAK,EAAAoG,KACA,IAAAC,GAAA,EAEAW,EAAArH,SAAA2G,IACAtG,EAAAZ,UAAAkH,IACAD,GAAA,MAIAA,GACAY,EAAAvH,KAAAM,MAOAiH,EAAAF,EAKA,IAAAG,EAAA,GAEA9K,gBAAAsC,UACAwI,EAAAnB,MAAAC,KAAAJ,GACAxC,QAAA,SAAAxD,GACA,GAAAA,EAAAnB,MACA,OAAAmB,EAAAqG,YAGAC,KAAA,SAAAtG,GACA,GAAAA,EAAAnB,MACA,OAAAmB,EAAAnB,UAKA,IAAA0I,EAAA,GAEA,GAAA/K,gBAAAsC,QACA,GAAAwI,EAAAvD,OAAA,CACA,IAIArE,EACAC,EACA6H,EACAC,EACAC,EACAC,EATAC,EAAA,EAEAA,EAAA5G,SAAAvE,eAAAoC,OASAwI,EAAAtH,SAAA,CAAAK,EAAAoG,KACApG,EAAAX,OAAA6H,EAAA,KACA5H,EAAAU,EAAAV,KACAC,EAAAS,EAAAT,MAEA6H,EAAA9H,EAAA,QAAAkI,EACAH,EAAA/H,EAAA,QAAAkI,EACAF,EACA/H,EACA,SAAAiI,EACAC,KAAAC,IAAApI,EAAAmI,KAAAE,GAAA,KACAJ,EACAhI,EACA,SAAAiI,EACAC,KAAAC,IAAApI,EAAAmI,KAAAE,GAAA,SAIAV,EAAAtH,SAAA,CAAAK,EAAAoG,KACA,IAAAC,GAAA,EAGArG,EAAAV,MAAA+H,GACArH,EAAAV,MAAA8H,GACApH,EAAAT,OAAAgI,GACAvH,EAAAT,OAAA+H,IAEAjB,GAAA,GAGAA,GACAc,EAAAzH,KAAAM,WAIAmH,EAAAF,OAGAE,EAAAF,EAKA,IAAAW,EAAA,GAEAzK,UAAAuB,QACAyI,EAAAxH,SAAA,CAAAK,EAAAoG,KACA,IAAAC,GAAA,EAEArG,EAAAgB,SACAqF,GAAA,GAGAA,GACAuB,EAAAlI,KAAAM,MAIA4H,EAAAT,EAKA,IAAAU,EAAA,GAEAzK,cAAAsB,QACAkJ,EAAAjI,SAAA,CAAAK,EAAAoG,KACA,IAAAC,GAAA,EAEArG,EAAAiB,aACAoF,GAAA,GAGAA,GACAwB,EAAAnI,KAAAM,MAIA6H,EAAAD,EAKApJ,wBAAA,GAEA,IAAAsJ,EAAAzK,eAAAoB,MAEAqJ,EACAD,EAAAlI,SAAA,CAAAK,EAAAoG,KACA,IAEA2B,EAFA1B,GAAA,EAIArG,EAAA0B,YAAA/B,SAAA,SAAAC,GACAA,EAAAnB,OAAA,gBAAAmB,EAAAoI,WACAD,EAAAnI,EAAAnB,MACAwJ,cACAC,OAAAJ,EAAAG,gBACA,IAAAF,IACA1B,GAAA,OAKA0B,EAAA/H,EAAAO,KAAA0H,cAAAC,OAAAJ,EAAAG,gBACA,IAAAF,IACA1B,GAAA,GAGAA,GACA7H,wBAAAkB,KAAAM,MAIAxB,wBAAAqJ,EAIA1J,cAAAK,wBAAAmF,OACA9B,kBAAA1D,eACAuE,kBAAAlE,wBAAA,EAAAH,eACAyF,SAAA3F,eACAI,WAAA,GA2BA,SAAA4J,gBACA3L,mBAAA4L,YAAA/L,eAAAoC,MAzBAnB,UAAA6E,iBAAA,QAAAmD,4BAIAlJ,gBAAA+F,iBAAA,UAAA,SAAAkG,GACAA,EAAAC,OAAA5J,SACAvC,UAAAsC,QACAnC,kBAAAyF,UAAAC,OAAA,YACAzF,kBAAAwF,UAAAC,OAAA,YACA3F,eAAAsC,UAAA,GAGAzC,aAAAyC,UAAA,EACAxC,UAAAwC,UAAA,IAEArC,kBAAAyF,UAAAE,IAAA,YACA1F,kBAAAwF,UAAAE,IAAA,YACA5F,eAAAsC,UAAA,EAEAzC,aAAAyC,UAAA,EACAxC,UAAAwC,UAAA,MAQA,MAAA4J,eAAA,KACApM,UAAAZ,iBAAA,UAAAoE,SAAAK,IACA9D,aAAAuC,OAIA,IAFAP,oBAAAhC,aAAAuC,OAAAoB,WACA2I,GAAAA,EAAAnJ,OAAAW,EAAAvB,QAGAuB,EAAA+B,UAAAE,IAAA,UAEAjC,EAAA+B,UAAAC,OAAA,UAGAhC,EAAA+B,UAAAE,IAAA,cAKA/F,aAAAiG,iBAAA,UAAA,WACAoG,iBAEArM,aAAAuC,MAEAP,oBAAAhC,aAAAuC,OAAAgK,MACAzI,GAAAA,EAAAX,OAAAlD,UAAAsC,UAGAtC,UAAAsC,MAAAP,oBAAAhC,aAAAuC,OAAA,GAAAY,KACA/C,kBAAAyF,UAAAC,OAAA,YACAzF,kBAAAwF,UAAAC,OAAA,YACA3F,eAAAsC,UAAA,IAGAxC,UAAAsC,MAAAtC,UAAA,GAAAsC,MACAnC,kBAAAyF,UAAAE,IAAA,YACA1F,kBAAAwF,UAAAE,IAAA,YACA5F,eAAAsC,UAAA,MAIAxC,UAAAgG,iBAAA,UAAA,WACAsC,OAAAC,KAAAxG,qBAAAuK,MAAA7D,KAIA,IAFA1G,oBAAA0G,GAAA/E,WACA2I,GAAAA,EAAAnJ,OAAAlD,UAAAsC,SAGAvC,aAAAuC,QAAAmG,IACA1I,aAAAuC,MAAAmG,EACA2D,qBAIApM,UAAAsC,OAKAnC,kBAAAyF,UAAAC,OAAA,YACAzF,kBAAAwF,UAAAC,OAAA,YACA3F,eAAAsC,UAAA,IANArC,kBAAAyF,UAAAE,IAAA,YACA1F,kBAAAwF,UAAAE,IAAA,YACA5F,eAAAsC,UAAA,MAUA,IAAA+J,OAAA,EAEA,SAAAtD,WACAxE,SAAA9D,UAAA2B,OAAAmC,SAAA/D,UAAA4B,QAAAiK,SACA7L,UAAA4B,MAAAmC,SAAA9D,UAAA2B,OAAAiK,QAEA3L,cAAAqL,YAAAvL,UAAA4B,MAEA5B,UAAA4B,QAAA3B,UAAA2B,MACA5B,UAAAyF,MAAAqG,OAAA,IAEA9L,UAAAyF,MAAAqG,OAAA,IAGAC,YAGA,SAAAvD,WACAzE,SAAA9D,UAAA2B,OAAAmC,SAAA/D,UAAA4B,QAAAiK,SACA5L,UAAA2B,MAAAmC,SAAA/D,UAAA4B,OAAAiK,QAEA1L,cAAAoL,YAAAtL,UAAA2B,MACA,WAAAzB,cAAAoL,cACA1L,cAAAiC,UAAA,EACA5B,cAAAqL,YAAA,GACApL,cAAAoL,YAAA,GACAlL,SAAAkL,YAAA,IAEAQ,YAGA,SAAAA,YACAC,UACAhM,UAAA4B,MAAA5B,UAAAoI,MAAApI,UAAAsI,IAAAtI,UAAAoI,KACA,IACA6D,UACAhM,UAAA2B,MAAA5B,UAAAoI,MAAApI,UAAAsI,IAAAtI,UAAAoI,KACA,IACAhI,YAAAqF,MAAAyG,WAAA,qCAAAF,wBAAAA,wBAAAC,sBAAAA,aAGAjM,UAAA4B,MAAAR,gBAAAiH,WACApI,UAAA2B,MAAAT,gBAAAkH,WAEAxI,cAAAyF,iBAAA,UAAA,SAAAkG,GACAA,EAAAC,OAAA5J,SACA/B,gBAAAoF,UAAAC,OAAA,YACApF,gBAAAmF,UAAAC,OAAA,YACAnF,UAAA8B,UAAA,EACA7B,UAAA6B,UAAA,IAEAhC,gBAAAoF,UAAAE,IAAA,YACArF,gBAAAmF,UAAAE,IAAA,YACApF,UAAA8B,UAAA,EACA7B,UAAA6B,UAAA,MAMA,MAAAqK,WAAAC,IACA3N,eAAAqE,SAAAK,IACAA,EAAA+B,UAAAC,OAAA,aAEAiH,EAAAlH,UAAAE,IAAA,UACA,IAAAiH,EACA7K,cAAAuC,SAAAqI,EAAAnH,WAAAzD,cACA8K,EAAA9K,cAAAuC,SAAAqI,EAAAnH,WAEAY,kBADAnE,UACAC,wBACAb,gBADAuL,EAAAC,IAIArF,SAAA3F,IACA,IAAAiL,EAAA3B,KAAA4B,KAAAlL,EAAAE,eAIA,IAFAhD,eAAAuH,kBAEA0G,EAAA,EAAAA,GAAAF,EAAAE,IACA,IAAAA,EACAjO,eAAA4H,mBACA,YACA,4BAAAqG,WAGAjO,eAAA4H,mBACA,YACA,qBAAAqG,WAKAhO,eAAAP,SAAAQ,iBAAA,SACAD,eAAAqE,SAAAK,IACAA,EAAAmC,iBAAA,SAAAkG,IACAW,WAAAX,EAAAC,eAOAzM,iBAAAsG,iBAAA,UAAAkG,IACAhK,cAAAuC,SAAAyH,EAAAC,OAAA7J,OAGAiE,kBADAnE,UACAC,wBACAb,gBADA,EAAAU,eAEAyF,SAAA3F,kBAGA,MAAAoL,aAAA,KACAlM,eAAAoB,MAAA,GACA+K,OAAAC,SAAAC,UAGAnM,gBAAA4E,iBAAA,QAAAoH,cAEA/L,eAAAmC,SAAAgK,IACAA,EAAAxH,iBAAA,SAAA,KACAwH,EAAAC,mBAAArO,iBAAA,UACAoE,SAAAkK,IACAA,EAAA5D,WACA4D,EAAA5D,UAAA","file":"all.min.js","sourcesContent":["const recNumLoc = document.querySelector(\".records-number\");\r\nconst noResultsLoc = document.querySelector(\".no-results\");\r\nconst resultsLoc = document.querySelector(\".results\");\r\nconst awardedResultsLoc = document.querySelector(\".awarded\");\r\nconst pagesContainer = document.querySelector(\".pages-container\");\r\nconst pagesSwitchLoc = document.querySelector(\".pages\");\r\nlet pageButtonsLoc = document.querySelectorAll(\".page\");\r\n\r\nconst dropDownFilterLoc = document.querySelector(\".drop-down-filters\");\r\nconst dropDownLoc = document.querySelector(\".drop-down-btn\");\r\nconst dropDownBtnLoc = document.querySelector(\".drop-down-btn img\");\r\nconst moreFiltersLoc = document.querySelector(\".more-filters\");\r\nconst lessFiltersLoc = document.querySelector(\".less-filters\");\r\n\r\nconst recordsOnPageLoc = document.querySelector(\".records-on-page\");\r\n\r\nconst branchesLoc = document.querySelector(\".branches\");\r\nconst jobFormLoc = document.querySelector(\".job-form\");\r\nconst jobTypeLoc = document.querySelector(\".job-type\");\r\nconst langLoc = document.querySelector(\".lang\");\r\nconst countriesLoc = document.querySelector(\".countries\");\r\nconst citiesLoc = document.querySelector(\".cities\");\r\n\r\nconst locationMarkLoc = document.querySelector(\"#localization\");\r\nconst locationDotLoc = document.querySelector(\"#loc-slider\");\r\nconst locationSliderLoc = document.querySelector(\r\n    \".distance-slider .slider-container .container\"\r\n);\r\nconst locationValuesLoc = document.querySelector(\r\n    \".distance-slider .slider-values\"\r\n);\r\nconst displayValDistance = document.getElementById(\"range3\");\r\n\r\nconst salaryMarkLoc = document.querySelector(\"#salary-mark\");\r\nconst salarySliderLoc = document.querySelector(\r\n    \".salary .slider-container .container\"\r\n);\r\nconst salaryValuesLoc = document.querySelector(\".salary .slider-values\");\r\nconst sliderOne = document.querySelector(\"#slider-1\");\r\nconst sliderTwo = document.querySelector(\"#slider-2\");\r\nconst displayValOne = document.getElementById(\"range1\");\r\nconst displayValTwo = document.getElementById(\"range2\");\r\nconst sliderTrack = document.querySelector(\".salary .slider-track\");\r\nconst pauseLoc = document.querySelector(\".salary .pause\");\r\n\r\nconst remoteLoc = document.querySelector(\"#remote\");\r\nconst relocationLoc = document.querySelector(\"#relocation\");\r\n\r\nconst searchInputLoc = document.querySelector(\".search-input input\");\r\n\r\nconst searchBtn = document.querySelector(\".search-btn\");\r\n\r\nconst clearFiltersLoc = document.querySelector(\".clear-filters\");\r\nconst clearFilterLoc = document.querySelectorAll(\".lists .list .clear-list\");\r\n\r\nlet apiPage = 1;\r\nlet rawAPIArray = [];\r\nlet allRecordsArray = [];\r\n\r\nlet filterBranchesList = [];\r\nlet filterJobFormList = [];\r\nlet filterJobTypeList = [];\r\nlet filterLangList = [];\r\nlet filterMinSalary = 100000;\r\nlet filterMaxSalary = 0;\r\nlet filterCountriesList = {};\r\n\r\nlet recordsNumber = 0;\r\nlet firstRecordNumber = 0;\r\nlet recordsOnPage = 20;\r\n\r\nlet filterListMaxHeight = 0;\r\n\r\nlet filtersON = false;\r\nlet filteredRecordsArray_10 = [];\r\n\r\nsearchInputLoc.value = \"\";\r\nrecordsOnPageLoc.value = 20;\r\n\r\nlocationMarkLoc.checked = false;\r\nlocationDotLoc.disabled = true;\r\ncountriesLoc.disabled = true;\r\ncitiesLoc.disabled = true;\r\nlocationDotLoc.value = 0;\r\n\r\nsalaryMarkLoc.checked = false;\r\nsliderOne.disabled = true;\r\nsliderTwo.disabled = true;\r\n\r\nremoteLoc.checked = false;\r\nrelocationLoc.checked = false;\r\n\r\n// create FILTER DATA from API data ///////////////////////////////////////////////\r\nconst createDataForFilters = (\r\n    branche,\r\n    jobForm,\r\n    jobType,\r\n    lang,\r\n    visibleRate,\r\n    salaryFrom,\r\n    salaryTo,\r\n    country,\r\n    city,\r\n    lati,\r\n    longi\r\n) => {\r\n    if (filterBranchesList.indexOf(branche) === -1 && branche !== undefined) {\r\n        filterBranchesList.push(branche);\r\n    }\r\n    if (jobForm) {\r\n        jobForm.forEach(function (elem) {\r\n            if (filterJobFormList.indexOf(elem) === -1) {\r\n                filterJobFormList.push(elem);\r\n            }\r\n        });\r\n    }\r\n    if (filterJobTypeList.indexOf(jobType) === -1 && jobType !== undefined) {\r\n        filterJobTypeList.push(jobType);\r\n    }\r\n    if (filterLangList.indexOf(lang) === -1) {\r\n        filterLangList.push(lang);\r\n    }\r\n    if (visibleRate) {\r\n        if (salaryFrom < filterMinSalary) {\r\n            filterMinSalary = salaryFrom;\r\n        }\r\n        if (salaryTo > filterMaxSalary) {\r\n            filterMaxSalary = salaryTo;\r\n        }\r\n    }\r\n    if (filterCountriesList[country]) {\r\n        if (\r\n            filterCountriesList[country].findIndex(\r\n                (arr_el) => arr_el.city === city\r\n            ) === -1\r\n        ) {\r\n            filterCountriesList[country].push({\r\n                city: city,\r\n                lati: lati,\r\n                longi: longi,\r\n            });\r\n        }\r\n    } else {\r\n        filterCountriesList[country] = [];\r\n        filterCountriesList[country].push({\r\n            city: city,\r\n            lati: lati,\r\n            longi: longi,\r\n        });\r\n    }\r\n};\r\n\r\n// create OBJECTS ARRAY from Raw API JSON ///////////////////////////////////////////////\r\nconst reworkData = (rawAPIArray) => {\r\n    rawAPIArray.forEach((el) => {\r\n        if (el.options.job_location) {\r\n            parsedJobLocation = JSON.parse(el.options.job_location);\r\n        }\r\n\r\n        allRecordsArray.push({\r\n            url: el.url,\r\n            name: el.advert.name,\r\n            branche: el.options.branches,\r\n            lang: el.advert.language,\r\n            jobType: el.options.job_type,\r\n            visibleRate: parseInt(el.options._Widoczna_stawka),\r\n            salaryFrom: parseInt(el.options._spodziewane_wynagrodzenie_od),\r\n            salaryTo: parseInt(el.options._spodziewane_wynagrodzenie_do),\r\n            remote: el.options.remote,\r\n            relocation: el.options._relokacja,\r\n            recruitmentType: el.options._rekrutacja_rodzaj,\r\n            jobForm: el.options._forma_zatrudnienia,\r\n            country: parsedJobLocation.country,\r\n            city: parsedJobLocation.locality,\r\n            lati: parseFloat(parsedJobLocation.latitude),\r\n            longi: parseFloat(parsedJobLocation.longitude),\r\n            description: el.advert.values,\r\n            awarded: el.awarded,\r\n        });\r\n\r\n        createDataForFilters(\r\n            el.options.branches,\r\n            el.options._forma_zatrudnienia,\r\n            el.options.job_type,\r\n            el.advert.language,\r\n            parseInt(el.options._Widoczna_stawka),\r\n            parseInt(el.options._spodziewane_wynagrodzenie_od),\r\n            parseInt(el.options._spodziewane_wynagrodzenie_do),\r\n            parsedJobLocation.country,\r\n            parsedJobLocation.locality,\r\n            parseFloat(parsedJobLocation.latitude),\r\n            parseFloat(parsedJobLocation.longitude)\r\n        );\r\n    });\r\n};\r\n\r\n// show RECORDS NUMBER ///////////////////////////////////////////////\r\n\r\nconst summariseDownload = (recordsNumber) => {\r\n    recNumLoc.innerText = `Znaleziono ${recordsNumber} ogłoszeń`;\r\n    if (!recordsNumber) {\r\n        noResultsLoc.classList.add(\"active\");\r\n    } else {\r\n        noResultsLoc.classList.remove(\"active\");\r\n    }\r\n};\r\n\r\n// show & hide MORE FILTERS //////////////////////////////////////////////////\r\n\r\nconst dropDownBtnStart = () => {\r\n    dropDownLoc.addEventListener(\"click\", () => {\r\n        dropDownBtnLoc.classList.toggle(\"up\");\r\n        if (dropDownFilterLoc.classList.contains(\"show\")) {\r\n            dropDownFilterLoc.classList.remove(\"show\");\r\n            dropDownFilterLoc.style.maxHeight = String(0) + \"px\";\r\n            moreFiltersLoc.classList.remove(\"hide\");\r\n            lessFiltersLoc.classList.remove(\"show\");\r\n        } else {\r\n            dropDownFilterLoc.classList.add(\"show\");\r\n            dropDownFilterLoc.style.maxHeight = \"1000px\";\r\n            moreFiltersLoc.classList.add(\"hide\");\r\n            lessFiltersLoc.classList.add(\"show\");\r\n        }\r\n    });\r\n\r\n    dropDownLoc.classList.add(\"active\");\r\n};\r\n\r\nconst pagesContainerStart = () => {\r\n    pagesContainer.classList.add(\"active\");\r\n};\r\n\r\n// create RECORDS BOXES ///////////////////////////////////////////////\r\n\r\nconst createRecordBoxes = (recordsArray, firstRecordNumber, recordsOnPage) => {\r\n    resultsLoc.replaceChildren();\r\n\r\n    for (i = firstRecordNumber; i < recordsOnPage; i++) {\r\n        // colouring of records by type of recruitment\r\n\r\n        if (recordsArray[i]) {\r\n            let borderColorClass = \"\";\r\n            let textColorClass = \"\";\r\n\r\n            if (recordsArray[i].recruitmentType === \"PT\") {\r\n                borderColorClass = \"pt-border\";\r\n                textColorClass = \"pt-text\";\r\n            }\r\n            if (recordsArray[i].recruitmentType === \"RS\") {\r\n                borderColorClass = \"rs-border\";\r\n                textColorClass = \"rs-text\";\r\n            }\r\n            if (recordsArray[i].recruitmentType === \"WEW\") {\r\n                borderColorClass = \"wew-border\";\r\n                textColorClass = \"wew-text\";\r\n            }\r\n\r\n            let formaZatrudnienia = \"\";\r\n\r\n            if (recordsArray[i].jobForm) {\r\n                recordsArray[i].jobForm.forEach(function (elem) {\r\n                    formaZatrudnienia =\r\n                        formaZatrudnienia + \"<p>\" + elem + \"</p>\";\r\n                });\r\n            }\r\n\r\n            resultsLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<a href=\"${\r\n                    recordsArray[i].url\r\n                }\" target=\"_blank\"><div class=\"result ${borderColorClass}\">\r\n            <div class=\"top\">\r\n              \r\n                    <div class=\"lang\"><p>${recordsArray[i].lang}</p></div>\r\n                    <div class=\"branche-name\">\r\n                        <div class=\"branche\">${\r\n                            recordsArray[i].branche\r\n                                ? recordsArray[i].branche\r\n                                : \"\"\r\n                        }</div>\r\n                        <div class=\"name ${textColorClass}\">${\r\n                    recordsArray[i].name\r\n                }</div>\r\n                   \r\n                </div>\r\n              \r\n            </div>\r\n\r\n            <div class=\"bottom\">\r\n                <div class=\"city-container\">\r\n                    <div class=\"city\"><img src=\"./img/location_dot.svg\">${\r\n                        recordsArray[i].city\r\n                    }</div>\r\n                    </div>\r\n                    <div class=\"details-container\">\r\n                    ${\r\n                        recordsArray[i].jobType\r\n                            ? \"<div class='jobtype'>\" +\r\n                              recordsArray[i].jobType +\r\n                              \"</div>\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        recordsArray[i].visibleRate\r\n                            ? recordsArray[i].salaryFrom &&\r\n                              recordsArray[i].salaryTo\r\n                                ? \"<div class='salary'>\" +\r\n                                  recordsArray[i].salaryFrom +\r\n                                  \" - \" +\r\n                                  recordsArray[i].salaryTo +\r\n                                  \"</div>\"\r\n                                : \"\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        recordsArray[i].remote\r\n                            ? \"<div class='remote'>zdalna</div>\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        recordsArray[i].relocation\r\n                            ? \"<div class='relocation'>relocation</div>\"\r\n                            : \"\"\r\n                    }\r\n                    <div class=\"employmentform\">${formaZatrudnienia}</div>\r\n                    </div>\r\n                </div>\r\n                   \r\n                </div>\r\n          \r\n\r\n        </div></a>`\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\n// create RECORDS BOXES ///////////////////////////////////////////////\r\n\r\nconst createAwardedRecordBoxes = (recordsArray) => {\r\n    awardedResultsLoc.replaceChildren();\r\n\r\n    let awardedRecordsArray = recordsArray.filter((elem) => {\r\n        return elem.awarded;\r\n    });\r\n\r\n    for (i = firstRecordNumber; i < 10; i++) {\r\n        if (awardedRecordsArray[i]) {\r\n            let borderColorClass = \"\";\r\n            let textColorClass = \"\";\r\n\r\n            if (awardedRecordsArray[i].recruitmentType === \"PT\") {\r\n                borderColorClass = \"pt-border\";\r\n                textColorClass = \"pt-text\";\r\n            }\r\n            if (awardedRecordsArray[i].recruitmentType === \"RS\") {\r\n                borderColorClass = \"rs-border\";\r\n                textColorClass = \"rs-text\";\r\n            }\r\n            if (awardedRecordsArray[i].recruitmentType === \"WEW\") {\r\n                borderColorClass = \"wew-border\";\r\n                textColorClass = \"wew-text\";\r\n            }\r\n\r\n            let formaZatrudnienia = \"\";\r\n\r\n            if (awardedRecordsArray[i].jobForm) {\r\n                awardedRecordsArray[i].jobForm.forEach(function (elem) {\r\n                    formaZatrudnienia =\r\n                        formaZatrudnienia + \"<p>\" + elem + \"</p>\";\r\n                });\r\n            }\r\n\r\n            awardedResultsLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<a href=\"${\r\n                    awardedRecordsArray[i].url\r\n                }\" target=\"_blank\"><div class=\"result ${borderColorClass}\">\r\n            <div class=\"top\">\r\n               \r\n                    <div class=\"lang\">\r\n                        <p>${awardedRecordsArray[i].lang}</p>\r\n                    </div>\r\n                    <div class=\"branche-name\">\r\n                        <div class=\"branche\">${\r\n                            awardedRecordsArray[i].branche\r\n                                ? awardedRecordsArray[i].branche\r\n                                : \"\"\r\n                        }</div>\r\n                        <div class=\"name ${textColorClass}\">${\r\n                    awardedRecordsArray[i].name\r\n                }</div>\r\n                    </div>\r\n                \r\n            </div>\r\n\r\n            <div class=\"bottom\">\r\n                <div class=\"city-container\">\r\n                    <div class=\"city\"><img src=\"./img/location_dot.svg\">${\r\n                        awardedRecordsArray[i].city\r\n                    }</div></div>\r\n                    <div class=\"details-container\">\r\n                    ${\r\n                        awardedRecordsArray[i].remote\r\n                            ? \"<div class='remote'>zdalna</div>\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        awardedRecordsArray[i].relocation\r\n                            ? \"<div class='relocation'>relocation</div>\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        awardedRecordsArray[i].jobType\r\n                            ? \"<div class='jobtype'>\" +\r\n                              awardedRecordsArray[i].jobType +\r\n                              \"</div>\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        awardedRecordsArray[i].visibleRate\r\n                            ? awardedRecordsArray[i].salaryFrom &&\r\n                              awardedRecordsArray[i].salaryTo\r\n                                ? \"<div class='salary'>\" +\r\n                                  awardedRecordsArray[i].salaryFrom +\r\n                                  \" - \" +\r\n                                  awardedRecordsArray[i].salaryTo +\r\n                                  \"</div>\"\r\n                                : \"\"\r\n                            : \"\"\r\n                    }\r\n                    <div class=\"employmentform\">${formaZatrudnienia}</div>\r\n                    </div>\r\n                \r\n            </div>\r\n\r\n            <div class=\"ribbon-wrap\">\r\n                    <div class=\"ribbon\">\r\n                            <img src=\"./img/star.svg\" alt=\"\">\r\n                            <img src=\"./img/star.svg\" alt=\"\">\r\n                            <img src=\"./img/star.svg\" alt=\"\">\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n\r\n            \r\n\r\n        </div></a>`\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\n// gets DATA FROM API ///////////////////////////////////////////////\r\n\r\nconst getAPI = (apiPage) => {\r\n    const response = fetch(\r\n        \"https://grupaprogres.traffit.com/public/job_posts/published\", // deactivate in local mode\r\n        //\"response.json\" // activate in local mode\r\n        {\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-Request-Page-Size\": \"100\",\r\n                \"X-Request-Current-Page\": apiPage,\r\n                \"X-Request-Sort\": '{\"sort_by\": \"id\", \"direction\": \"ASC\"}',\r\n            },\r\n        }\r\n    );\r\n\r\n    return response;\r\n};\r\n\r\nconst loopOnAPI = (jsonData) => {\r\n    if (jsonData.length > 0) {\r\n        // deactivate in local mode\r\n        rawAPIArray = rawAPIArray.concat(jsonData); // deactivate in local mode\r\n        // rawAPIArray = jsonData; // activate in local mode\r\n        apiPage++; // deactivate in local mode\r\n        createRecordsObjFromAPI(apiPage); // deactivate in local mode\r\n    } else {\r\n        // deactivate in local mode\r\n        reworkData(rawAPIArray);\r\n        recordsNumber = rawAPIArray.length;\r\n        summariseDownload(recordsNumber);\r\n        createRecordBoxes(allRecordsArray, firstRecordNumber, recordsOnPage);\r\n        createAwardedRecordBoxes(allRecordsArray);\r\n        setPages(recordsNumber);\r\n        createFilterLists();\r\n        dropDownBtnStart();\r\n        pagesContainerStart();\r\n    } // deactivate in local mode\r\n};\r\n\r\nasync function createRecordsObjFromAPI(apiPage) {\r\n    const rawData = await getAPI(apiPage);\r\n    const jsonData = await rawData.json();\r\n    loopOnAPI(jsonData);\r\n}\r\n\r\ncreateRecordsObjFromAPI(apiPage);\r\n\r\n// create HTML FILTERS LISTS //////////////////////////////////////////////////////\r\n\r\nconst createFilterLists = () => {\r\n    if (filterBranchesList.length > 0) {\r\n        filterBranchesList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterBranchesList.length * 21 + 3;\r\n        filterListMaxHeight = rowHeight;\r\n        branchesLoc.style.height = String(rowHeight) + \"px\";\r\n        filterBranchesList.forEach(function (el) {\r\n            branchesLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${el}\">${el}</option>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (filterJobFormList.length > 0) {\r\n        filterJobFormList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterJobFormList.length * 21 + 3;\r\n        jobFormLoc.style.height = String(rowHeight) + \"px\";\r\n        filterJobFormList.forEach(function (el) {\r\n            jobFormLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${el}\">${el}</option>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (filterJobTypeList.length > 0) {\r\n        filterJobTypeList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterJobTypeList.length * 21 + 3;\r\n        jobTypeLoc.style.height = String(rowHeight) + \"px\";\r\n        filterJobTypeList.forEach(function (el) {\r\n            jobTypeLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${el}\">${el}</option>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (filterLangList.length > 0) {\r\n        filterLangList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterLangList.length * 21 + 3;\r\n        langLoc.style.height = String(rowHeight) + \"px\";\r\n        filterLangList.forEach(function (el) {\r\n            langLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${el}\">${el}</option>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (Object.keys(filterCountriesList).length > 0) {\r\n        countriesLoc.insertAdjacentHTML(\r\n            \"beforeend\",\r\n            `<option value=\"\" class=\"placeholder\">Państwo</option>`\r\n        );\r\n\r\n        citiesLoc.insertAdjacentHTML(\r\n            \"beforeend\",\r\n            `<option value=\"\" class=\"placeholder\">Miasto</option>`\r\n        );\r\n\r\n        function compare(a, b) {\r\n            return a.city.localeCompare(b.city);\r\n        }\r\n\r\n        for (let key in filterCountriesList) {\r\n            filterCountriesList[key].sort(compare);\r\n        }\r\n\r\n        filterCountriesList = Object.keys(filterCountriesList)\r\n            .sort()\r\n            .reduce((accumulator, key) => {\r\n                accumulator[key] = filterCountriesList[key];\r\n                return accumulator;\r\n            }, {});\r\n\r\n        let allCitiesObj = [];\r\n        for (let key in filterCountriesList) {\r\n            countriesLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${key}\">${key}</option>`\r\n            );\r\n            allCitiesObj = allCitiesObj.concat(filterCountriesList[key]);\r\n        }\r\n\r\n        let allCitiesArray = [];\r\n        allCitiesObj.forEach((el) => {\r\n            allCitiesArray.push(el.city);\r\n        });\r\n\r\n        allCitiesArray.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n\r\n        allCitiesArray.forEach(function (el) {\r\n            citiesLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${el}\" class=\"active\">${el} </option>`\r\n            );\r\n        });\r\n    }\r\n\r\n    sliderOne.min = filterMinSalary.toString();\r\n    sliderTwo.min = filterMinSalary.toString();\r\n    sliderOne.max = filterMaxSalary.toString();\r\n    sliderTwo.max = filterMaxSalary.toString();\r\n    sliderOne.value = filterMinSalary.toString();\r\n    sliderTwo.value = filterMaxSalary.toString();\r\n    slideOne();\r\n    slideTwo();\r\n};\r\n\r\n// filter the data to create FILTERED OBJECTS ARRAY ///////////////////////////////\r\n\r\nconst createFilteredRecordsArray = () => {\r\n    const branchesChildrenLoc = document.querySelectorAll(\".branches option\");\r\n    const jobFormChildrenLoc = document.querySelectorAll(\".job-form option\");\r\n    const jobTypeChildrenLoc = document.querySelectorAll(\".job-type option\");\r\n    const langChildrenLoc = document.querySelectorAll(\".lang option\");\r\n    const countriesChildrenLoc = document.querySelectorAll(\".countries option\");\r\n    const citiesChildrenLoc = document.querySelectorAll(\".cities option\");\r\n\r\n    let filteredRecordsArray = allRecordsArray;\r\n\r\n    // selectedBranches ////////////////\r\n\r\n    let selectedBranches = Array.from(branchesChildrenLoc)\r\n        .filter(function (elem) {\r\n            return elem.selected;\r\n        })\r\n        .map(function (elem) {\r\n            return elem.value;\r\n        });\r\n\r\n    let filteredRecordsArray_1 = [];\r\n\r\n    if (selectedBranches.length !== 0) {\r\n        filteredRecordsArray.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedBranches.forEach((selectedFiltr) => {\r\n                if (el.branche === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_1.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_1 = filteredRecordsArray;\r\n    }\r\n\r\n    // selectedJobForms ////////////////\r\n\r\n    let selectedJobForms = Array.from(jobFormChildrenLoc)\r\n        .filter(function (elem) {\r\n            return elem.selected;\r\n        })\r\n        .map(function (elem) {\r\n            return elem.value;\r\n        });\r\n\r\n    let filteredRecordsArray_2 = [];\r\n\r\n    if (selectedJobForms.length !== 0) {\r\n        filteredRecordsArray_1.forEach((el, index) => {\r\n            if (el.jobForm) {\r\n                let addFlag = false;\r\n\r\n                selectedJobForms.forEach((selectedFiltr) => {\r\n                    if (el.jobForm.indexOf(selectedFiltr) !== -1) {\r\n                        addFlag = true;\r\n                    }\r\n                });\r\n\r\n                if (addFlag) {\r\n                    filteredRecordsArray_2.push(el);\r\n                }\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_2 = filteredRecordsArray_1;\r\n    }\r\n\r\n    // selectedJobTypes////////////////\r\n\r\n    let selectedjobTypes = Array.from(jobTypeChildrenLoc)\r\n        .filter(function (elem) {\r\n            return elem.selected;\r\n        })\r\n        .map(function (elem) {\r\n            return elem.value;\r\n        });\r\n\r\n    let filteredRecordsArray_3 = [];\r\n\r\n    if (selectedjobTypes.length !== 0) {\r\n        filteredRecordsArray_2.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedjobTypes.forEach((selectedFiltr) => {\r\n                if (el.jobType === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_3.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_3 = filteredRecordsArray_2;\r\n    }\r\n\r\n    // selectedLangs ////////////////\r\n\r\n    let selectedLangs = Array.from(langChildrenLoc)\r\n        .filter(function (elem) {\r\n            return elem.selected;\r\n        })\r\n        .map(function (elem) {\r\n            return elem.value;\r\n        });\r\n\r\n    let filteredRecordsArray_4 = [];\r\n\r\n    if (selectedLangs.length !== 0) {\r\n        filteredRecordsArray_3.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedLangs.forEach((selectedFiltr) => {\r\n                if (el.lang === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_4.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_4 = filteredRecordsArray_3;\r\n    }\r\n\r\n    // selectedSalary ////////////////\r\n\r\n    let selectedValOne;\r\n    let selectedValTwo;\r\n    if (salaryMarkLoc.checked) {\r\n        selectedValOne = parseInt(displayValOne.innerText);\r\n        selectedValTwo = parseInt(displayValTwo.innerText);\r\n    }\r\n\r\n    let filteredRecordsArray_5 = [];\r\n\r\n    if (salaryMarkLoc.checked) {\r\n        filteredRecordsArray_4.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            if (el.visibleRate) {\r\n                if (el.salaryTo && el.salaryFrom) {\r\n                    if (\r\n                        el.salaryTo >= selectedValOne &&\r\n                        el.salaryFrom <= selectedValTwo\r\n                    ) {\r\n                        addFlag = true;\r\n                    }\r\n                }\r\n                if (el.salaryTo && !el.salaryFrom) {\r\n                    if (el.salaryTo >= selectedValOne) {\r\n                        addFlag = true;\r\n                    }\r\n                }\r\n                if (!el.salaryTo && el.salaryFrom) {\r\n                    if (el.salaryFrom <= selectedValTwo) {\r\n                        addFlag = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_5.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_5 = filteredRecordsArray_4;\r\n    }\r\n\r\n    // selectedCountry ////////////////\r\n\r\n    let selectedCountry = [];\r\n\r\n    if (locationMarkLoc.checked) {\r\n        selectedCountry = Array.from(countriesChildrenLoc)\r\n            .filter(function (elem) {\r\n                if (elem.value) {\r\n                    return elem.selected;\r\n                }\r\n            })\r\n            .map(function (elem) {\r\n                if (elem.value) {\r\n                    return elem.value;\r\n                }\r\n            });\r\n    }\r\n\r\n    let filteredRecordsArray_6 = [];\r\n\r\n    if (locationMarkLoc.checked) {\r\n        if (selectedCountry.length) {\r\n            filteredRecordsArray_5.forEach((el, index) => {\r\n                let addFlag = false;\r\n\r\n                selectedCountry.forEach((selectedFiltr) => {\r\n                    if (el.country === selectedFiltr) {\r\n                        addFlag = true;\r\n                    }\r\n                });\r\n\r\n                if (addFlag) {\r\n                    filteredRecordsArray_6.push(el);\r\n                }\r\n            });\r\n        } else {\r\n            filteredRecordsArray_6 = filteredRecordsArray_5;\r\n        }\r\n    } else {\r\n        filteredRecordsArray_6 = filteredRecordsArray_5;\r\n    }\r\n\r\n    // selectedCity & selectedDistance ////////////////\r\n\r\n    let selectedCity = [];\r\n\r\n    if (locationMarkLoc.checked) {\r\n        selectedCity = Array.from(citiesChildrenLoc)\r\n            .filter(function (elem) {\r\n                if (elem.value) {\r\n                    return elem.selected;\r\n                }\r\n            })\r\n            .map(function (elem) {\r\n                if (elem.value) {\r\n                    return elem.value;\r\n                }\r\n            });\r\n    }\r\n\r\n    let filteredRecordsArray_7 = [];\r\n\r\n    if (locationMarkLoc.checked) {\r\n        if (selectedCity.length) {\r\n            let selectedDistance = 0;\r\n\r\n            selectedDistance = parseInt(locationDotLoc.value);\r\n\r\n            let lati;\r\n            let longi;\r\n            let min_lati;\r\n            let max_lati;\r\n            let min_longi;\r\n            let max_longi;\r\n\r\n            filteredRecordsArray_6.forEach((el, index) => {\r\n                if (el.city === selectedCity[0]) {\r\n                    lati = el.lati;\r\n                    longi = el.longi;\r\n\r\n                    min_lati = lati - selectedDistance * 0.009044;\r\n                    max_lati = lati + selectedDistance * 0.009044;\r\n                    min_longi =\r\n                        longi -\r\n                        (selectedDistance * 0.0089831) /\r\n                            Math.cos((lati * Math.PI) / 180);\r\n                    max_longi =\r\n                        longi +\r\n                        (selectedDistance * 0.0089831) /\r\n                            Math.cos((lati * Math.PI) / 180);\r\n                }\r\n            });\r\n\r\n            filteredRecordsArray_6.forEach((el, index) => {\r\n                let addFlag = false;\r\n\r\n                if (\r\n                    el.lati <= max_lati &&\r\n                    el.lati >= min_lati &&\r\n                    el.longi <= max_longi &&\r\n                    el.longi >= min_longi\r\n                ) {\r\n                    addFlag = true;\r\n                }\r\n\r\n                if (addFlag) {\r\n                    filteredRecordsArray_7.push(el);\r\n                }\r\n            });\r\n        } else {\r\n            filteredRecordsArray_7 = filteredRecordsArray_6;\r\n        }\r\n    } else {\r\n        filteredRecordsArray_7 = filteredRecordsArray_6;\r\n    }\r\n\r\n    // selectedRemote ////////////////\r\n\r\n    let filteredRecordsArray_8 = [];\r\n\r\n    if (remoteLoc.checked) {\r\n        filteredRecordsArray_7.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            if (el.remote) {\r\n                addFlag = true;\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_8.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_8 = filteredRecordsArray_7;\r\n    }\r\n\r\n    // selectedRelocation ////////////////\r\n\r\n    let filteredRecordsArray_9 = [];\r\n\r\n    if (relocationLoc.checked) {\r\n        filteredRecordsArray_8.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            if (el.relocation) {\r\n                addFlag = true;\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_9.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_9 = filteredRecordsArray_8;\r\n    }\r\n\r\n    // searchText ////////////////\r\n\r\n    filteredRecordsArray_10 = [];\r\n\r\n    let searchText = searchInputLoc.value;\r\n\r\n    if (searchText) {\r\n        filteredRecordsArray_9.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            let position;\r\n\r\n            el.description.forEach(function (elem) {\r\n                if (elem.value && elem.field_id !== \"geolocation\") {\r\n                    position = elem.value\r\n                        .toLowerCase()\r\n                        .search(searchText.toLowerCase());\r\n                    if (position !== -1) {\r\n                        addFlag = true;\r\n                    }\r\n                }\r\n            });\r\n\r\n            position = el.name.toLowerCase().search(searchText.toLowerCase());\r\n            if (position !== -1) {\r\n                addFlag = true;\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_10.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_10 = filteredRecordsArray_9;\r\n    }\r\n\r\n    // recordsArray = filteredRecordsArray_10;\r\n    recordsNumber = filteredRecordsArray_10.length;\r\n    summariseDownload(recordsNumber);\r\n    createRecordBoxes(filteredRecordsArray_10, 0, recordsOnPage);\r\n    setPages(recordsNumber);\r\n    filtersON = true;\r\n};\r\n\r\nsearchBtn.addEventListener(\"click\", createFilteredRecordsArray);\r\n\r\n// COUNTRY & CITY LISTENER /////////////////////////////////////////////////////////////\r\n\r\nlocationMarkLoc.addEventListener(\"change\", function (e) {\r\n    if (e.target.checked) {\r\n        if (citiesLoc.value) {\r\n            locationSliderLoc.classList.remove(\"unactive\");\r\n            locationValuesLoc.classList.remove(\"unactive\");\r\n            locationDotLoc.disabled = false;\r\n        }\r\n\r\n        countriesLoc.disabled = false;\r\n        citiesLoc.disabled = false;\r\n    } else {\r\n        locationSliderLoc.classList.add(\"unactive\");\r\n        locationValuesLoc.classList.add(\"unactive\");\r\n        locationDotLoc.disabled = true;\r\n\r\n        countriesLoc.disabled = true;\r\n        citiesLoc.disabled = true;\r\n    }\r\n});\r\n\r\nfunction slideDistance() {\r\n    displayValDistance.textContent = locationDotLoc.value;\r\n}\r\n\r\nconst activateCities = () => {\r\n    citiesLoc.querySelectorAll(\"option\").forEach((el) => {\r\n        if (countriesLoc.value) {\r\n            if (\r\n                filterCountriesList[countriesLoc.value].findIndex(\r\n                    (sel_el) => sel_el.city === el.value\r\n                ) !== -1\r\n            ) {\r\n                el.classList.add(\"active\");\r\n            } else {\r\n                el.classList.remove(\"active\");\r\n            }\r\n        } else {\r\n            el.classList.add(\"active\");\r\n        }\r\n    });\r\n};\r\n\r\ncountriesLoc.addEventListener(\"change\", function () {\r\n    activateCities();\r\n\r\n    if (countriesLoc.value) {\r\n        if (\r\n            filterCountriesList[countriesLoc.value].find(\r\n                (el) => el.city !== citiesLoc.value\r\n            )\r\n        ) {\r\n            citiesLoc.value = filterCountriesList[countriesLoc.value][0].city;\r\n            locationSliderLoc.classList.remove(\"unactive\");\r\n            locationValuesLoc.classList.remove(\"unactive\");\r\n            locationDotLoc.disabled = false;\r\n        }\r\n    } else {\r\n        citiesLoc.value = citiesLoc[0].value;\r\n        locationSliderLoc.classList.add(\"unactive\");\r\n        locationValuesLoc.classList.add(\"unactive\");\r\n        locationDotLoc.disabled = true;\r\n    }\r\n});\r\n\r\ncitiesLoc.addEventListener(\"change\", function () {\r\n    Object.keys(filterCountriesList).find((key) => {\r\n        if (\r\n            filterCountriesList[key].findIndex(\r\n                (sel_el) => sel_el.city === citiesLoc.value\r\n            ) !== -1\r\n        ) {\r\n            if (countriesLoc.value !== key) {\r\n                countriesLoc.value = key;\r\n                activateCities();\r\n            }\r\n        }\r\n    });\r\n    if (!citiesLoc.value) {\r\n        locationSliderLoc.classList.add(\"unactive\");\r\n        locationValuesLoc.classList.add(\"unactive\");\r\n        locationDotLoc.disabled = true;\r\n    } else {\r\n        locationSliderLoc.classList.remove(\"unactive\");\r\n        locationValuesLoc.classList.remove(\"unactive\");\r\n        locationDotLoc.disabled = false;\r\n    }\r\n});\r\n\r\n// SALARY LISTENER ////////////////////////////////////////////////////////////////////\r\n\r\nlet minGap = 0;\r\n\r\nfunction slideOne() {\r\n    if (parseInt(sliderTwo.value) - parseInt(sliderOne.value) <= minGap) {\r\n        sliderOne.value = parseInt(sliderTwo.value) - minGap;\r\n    }\r\n    displayValOne.textContent = sliderOne.value;\r\n\r\n    if (sliderOne.value === sliderTwo.value) {\r\n        sliderOne.style.zIndex = \"1\";\r\n    } else {\r\n        sliderOne.style.zIndex = \"0\";\r\n    }\r\n\r\n    fillColor();\r\n}\r\n\r\nfunction slideTwo() {\r\n    if (parseInt(sliderTwo.value) - parseInt(sliderOne.value) <= minGap) {\r\n        sliderTwo.value = parseInt(sliderOne.value) + minGap;\r\n    }\r\n    displayValTwo.textContent = sliderTwo.value;\r\n    if (displayValTwo.textContent === \"100000\") {\r\n        salaryMarkLoc.disabled = true;\r\n        displayValOne.textContent = \"\";\r\n        displayValTwo.textContent = \"\";\r\n        pauseLoc.textContent = \"\";\r\n    }\r\n    fillColor();\r\n}\r\n\r\nfunction fillColor() {\r\n    percent1 =\r\n        ((sliderOne.value - sliderOne.min) / (sliderOne.max - sliderOne.min)) *\r\n        100;\r\n    percent2 =\r\n        ((sliderTwo.value - sliderOne.min) / (sliderOne.max - sliderOne.min)) *\r\n        100;\r\n    sliderTrack.style.background = `linear-gradient(to right, #dadae5 ${percent1}%, #fe7320ff ${percent1}%, #fe7320ff ${percent2}%, #dadae5 ${percent2}%)`;\r\n}\r\n\r\nsliderOne.value = filterMaxSalary.toString();\r\nsliderTwo.value = filterMinSalary.toString();\r\n\r\nsalaryMarkLoc.addEventListener(\"change\", function (e) {\r\n    if (e.target.checked) {\r\n        salarySliderLoc.classList.remove(\"unactive\");\r\n        salaryValuesLoc.classList.remove(\"unactive\");\r\n        sliderOne.disabled = false;\r\n        sliderTwo.disabled = false;\r\n    } else {\r\n        salarySliderLoc.classList.add(\"unactive\");\r\n        salaryValuesLoc.classList.add(\"unactive\");\r\n        sliderOne.disabled = true;\r\n        sliderTwo.disabled = true;\r\n    }\r\n});\r\n\r\n// set & change PAGE //////////////////////////////////////////////////////////\r\n\r\nconst changePage = (pageBtn) => {\r\n    pageButtonsLoc.forEach((el) => {\r\n        el.classList.remove(\"active\");\r\n    });\r\n    pageBtn.classList.add(\"active\");\r\n    let firstRecord =\r\n        recordsOnPage * parseInt(pageBtn.innerText) - recordsOnPage;\r\n    let lastRecord = recordsOnPage * parseInt(pageBtn.innerText);\r\n    filtersON\r\n        ? createRecordBoxes(filteredRecordsArray_10, firstRecord, lastRecord)\r\n        : createRecordBoxes(allRecordsArray, firstRecord, lastRecord);\r\n};\r\n\r\nconst setPages = (recordsNumber) => {\r\n    let pagesQuantity = Math.ceil(recordsNumber / recordsOnPage);\r\n\r\n    pagesSwitchLoc.replaceChildren();\r\n\r\n    for (n = 1; n <= pagesQuantity; n++) {\r\n        if (n === 1) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"page active\">${n}</div>`\r\n            );\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"page\">${n}</div>`\r\n            );\r\n        }\r\n    }\r\n\r\n    pageButtonsLoc = document.querySelectorAll(\".page\");\r\n    pageButtonsLoc.forEach((el) => {\r\n        el.addEventListener(\"click\", (e) => {\r\n            changePage(e.target);\r\n        });\r\n    });\r\n};\r\n\r\n// change RECORDS QUANTITY ON PAGE //////////////////////////////////////////////////\r\n\r\nrecordsOnPageLoc.addEventListener(\"change\", (e) => {\r\n    recordsOnPage = parseInt(e.target.value);\r\n\r\n    filtersON\r\n        ? createRecordBoxes(filteredRecordsArray_10, 0, recordsOnPage)\r\n        : createRecordBoxes(allRecordsArray, 0, recordsOnPage);\r\n    setPages(recordsNumber);\r\n});\r\n\r\nconst clearFilters = () => {\r\n    searchInputLoc.value = \"\";\r\n    window.location.reload();\r\n};\r\n\r\nclearFiltersLoc.addEventListener(\"click\", clearFilters);\r\n\r\nclearFilterLoc.forEach((elemFiltr) => {\r\n    elemFiltr.addEventListener(\"click\", () => {\r\n        let optArray = elemFiltr.nextElementSibling.querySelectorAll(\"option\");\r\n        optArray.forEach((elOpt) => {\r\n            if (elOpt.selected) {\r\n                elOpt.selected = false;\r\n            }\r\n        });\r\n    });\r\n});\r\n"]}